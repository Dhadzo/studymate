{"version":3,"sources":["assets/studying-image.jpg","redux/user/user.types.js","redux/user/user.actions.js","components/autocomplete-input.jsx","components/header.component.jsx","pages/welcomepage/welcomepage.component.jsx","pages/signin.component.jsx","pages/signup.component.jsx","components/styled-components.jsx","components/chat-tab/chat-tab.component.jsx","components/chat-body.component.jsx","pages/chats-page.jsx","components/notification.jsx","pages/notifications.jsx","redux/posts/posts-actions.js","components/video-player.jsx","components/post.jsx","components/current-user-posts.jsx","components/replied-posts.jsx","components/liked-posts.jsx","components/shared-posts.jsx","components/edit-profile-modal.jsx","components/recent-posts.jsx","components/hot-posts.jsx","components/trending-posts.jsx","components/all-posts.jsx","components/who-to-follow.jsx","pages/homepage.jsx","pages/profile.jsx","components/reply.jsx","components/comment.jsx","pages/discussion.jsx","components/video-dropzone.jsx","components/post-upload.jsx","pages/new-post.jsx","pages/watch-videos.jsx","pages/search.jsx","App.js","serviceWorker.js","redux/user/user.utils.js","redux/user/user.reducer.js","redux/posts/posts-reducers.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","UserActionTypes","SIGN_IN_SUCCESS","SIGN_IN_TOKEN","CHECK_USER_SESSION","SIGN_OUT_SUCCESS","SEND_MESSAGE_START","SENDING_MESSAGE_STATUS","UPDATE_USER_PROFILE","SEND_DISCUSSION_MESSAGE","SENDING_DISCUSSION_MESSAGE_STATUS","REFRESH_USER","SEND_REPLY","SENDING_REPLY_STATUS","FETCH_USER_PROFILE","TOGGLE_USER_HEADER_OPTIONS_DISPLAY","LIKING_POST","signInSuccess","user","type","payload","signInToken","userToken","AutocompleteInput","subjects","otherProps","useSelector","state","useState","activeItem","setActiveItem","filteredUsers","setFilteredUsers","value","setValue","inputValue","setInputValue","searchFieldInput","useRef","subjectSearchResultBox","history","useHistory","handleKeyPress","event","a","key","length","target","handleKeyDownUp","keyCode","handleKeyDown","handleKeyUp","push","pathname","search","current","i","children","style","backgroundColor","temp","innerHTML","useEffect","fetch","toLowerCase","headers","then","res","json","data","handleChange","class","placeholder","onChange","onKeyPress","onKeyDown","ref","autoComplete","document","activeElement","className","map","subject","display","flexDirection","alignItems","marginBottom","src","profilePic","width","height","name","styles","header","position","zIndex","nav","justifyContent","listStyleType","rightNav","marginRight","top","right","centerNav","marginLeft","leftNav","searchBar","fontSize","listItem","rightNavItem","profileImage","marginTop","Header","currentUser","userHeader","setUserHeader","dropDownBox","dispatch","useDispatch","addEventListener","handlerClick","removeEventListener","e","contains","fontFamily","to","paddingTop","paddingRight","paddingLeft","border","username","color","onClick","WelcomePage","StudyingImage","SignIn","emailOrUsername","password","userCredentials","setUserCredentials","isLoading","setIsLoading","errorSigningIn","setErrorSigningIn","handleSubmit","preventDefault","method","body","JSON","stringify","response","message","details","console","log","authToken","opacity","Spinner","animation","variant","id","checked","for","onSubmit","data-type","href","SignUp","email","emailError","setEmailError","nameError","setNameError","passwordError","setPasswordError","usernameError","setUsernameError","setResult","includes","error","LinkStyles","styled","Link","ChatTab","mateName","img","chat","currentUserId","_id","user1","user2","Media","Body","ChatBody","mateId","chatId","match","messages","setChat","chatbox","inputField","params","scrollTop","focus","paddingBottom","sender","message_body","container","chats","backgroundImage","boxShadow","users","overflow","connect","isSending","setChats","path","render","props","Notification","notification","typeId","parentId","notifications","Notifications","setNotifications","window","scrollTo","addAllDiscussions","discussions","VideoPlayer","video","blueJuice","controls","playIcon","playing","setPlaying","togglePlay","paused","play","visibility","pause","onMouseOver","onMouseOut","onTimeUpdate","juicePos","currentTime","duration","ended","requestFullscreen","Post","React","forwardRef","discussion","creator","textDecoration","ReactHtmlParser","topic","image","postImage","postfooter","icon","likes","borderRadius","cursor","CurrentUserPosts","location","useLocation","postId","URLSearchParams","get","posts","allDiscussions","userPosts","setUserPosts","likedPost","useCallback","node","scrollIntoView","behavior","userProfile","post","RepliedPosts","LikedPosts","SharedPosts","EditProfileModal","setName","setUsername","upload","setUpload","selectedFile","setSelectedFile","setImg","uploadedFile","Modal","aria-labelledby","accept","reader","FileReader","file","files","result","readAsDataURL","onHide","ext","split","pop","newFileName","formData","FormData","append","axios","updatePicture","RecentPosts","HotPosts","TrendingPosts","AllPosts","setDiscussions","WhoToFollow","RecommendedUsers","setRecommendedUsers","HomePage","component","Profile","modalShow","setModalShow","setUserProfile","messageUser","userId","updateUserProfile","Id","show","alignContent","comment","padding","foot","justifycontent","Reply","reply","Comment","setReply","replyValue","setReplyValue","hideReplies","setHideReplies","isSendingReply","replies","setReplies","replyInput","messageId","senderId","textarea","marginBotton","submitButton","outline","Discussion","commentId","__v","setDiscussion","discussionId","isSendDiscussionMsg","discussionBox","newComment","minHeight","title","margin","buttons","VideoDropZone","setTitle","videoUrl","setVideoUrl","onDrop","acceptedFiles","forEach","onabort","onerror","onload","respose","uploaded","url","alert","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","success","maxLength","postDiv","tabs","tabItem","PostUpload","submit","editor","ClassicEditor","onInit","getData","setData","editing","view","change","writer","setStyle","getRoot","config","ckfinder","uploadUrl","toolbar","resizeOptions","label","backgroundPosition","backgroundRepeat","backgroundSize","NewPost","setPost","imageAndVideo","setImageAndVideo","WatchVideos","watchVideos","maxWidth","minWidth","Search","searchResults","setSearchResults","App","exact","ChatsPage","Boolean","hostname","socket","io","sendMsg","Messages","object","emit","sendDiscussionMsg","sendReply","replyObject","INITIAL_STATE","isFetchingMates","searchResultMates","mates","likingPost","Replies","userHeaderOptionsDisplay","userReducer","action","FETCH_MATES_SUCCESS","postsReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4152da89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/studying-image.558b19bf.jpg\";","const UserActionTypes = {\r\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\r\n    SIGN_IN_TOKEN: 'SIGN_IN_TOKEN', \r\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n    SEND_MESSAGE_START: 'SEND_MESSAGE_START',\r\n    SENDING_MESSAGE_STATUS: 'SENDING_MESSAGE_STATUS',\r\n    UPDATE_USER_PROFILE: 'UPDATE_USER_PROFILE',\r\n    SEND_DISCUSSION_MESSAGE: 'SEND_DISCUSSION_MESSAGE',\r\n    SENDING_DISCUSSION_MESSAGE_STATUS: 'SENDING_DISCUSSION_MESSAGE_STATUS',\r\n    REFRESH_USER: 'REFRESH_USER',\r\n    SEND_REPLY: 'SEND_REPLY',\r\n    SENDING_REPLY_STATUS: 'SENDING_REPLY_STATUS',\r\n    FETCH_USER_PROFILE: 'FETCH_USER_PROFILE',\r\n    TOGGLE_USER_HEADER_OPTIONS_DISPLAY: 'TOGGLE_USER_HEADER_OPTIONS_DISPLAY', \r\n    LIKING_POST:'LIKING_POST'\r\n}\r\n\r\nexport default UserActionTypes;","import UserActionTypes from './user.types';\r\n\r\n\r\n\r\nexport const signInSuccess = (user) => ({\r\n    type: UserActionTypes.SIGN_IN_SUCCESS,\r\n    payload: user\r\n});\r\nexport const signInToken = (userToken) => ({\r\n    type: UserActionTypes.SIGN_IN_TOKEN,\r\n    payload: userToken\r\n})\r\n\r\nexport const checkUserSession = () => ({\r\n    type: UserActionTypes.CHECK_USER_SESSION\r\n})\r\n\r\n\r\nexport const signOutSuccess = () => ({\r\n    type: UserActionTypes.SIGN_OUT_SUCCESS\r\n});\r\n\r\nexport const updateUserProfile = data => ({\r\n    type: UserActionTypes.UPDATE_USER_PROFILE,\r\n    payload: data\r\n})\r\nexport const sendMessageStart = messageChatAndCurrentUserId => ({\r\n    type: UserActionTypes.SEND_MESSAGE_START,\r\n    payload: messageChatAndCurrentUserId\r\n})\r\n\r\nexport const sendingMessageStatus = () => ({\r\n    type: UserActionTypes.SENDING_MESSAGE_STATUS\r\n})\r\n\r\nexport const sendDiscussionMessage = messageDiscussionIdAndCurrentUserId => ({\r\n    type: UserActionTypes.SEND_DISCUSSION_MESSAGE,\r\n    payload: messageDiscussionIdAndCurrentUserId\r\n})\r\nexport const sendingDiscussionMessageStatus = () => ({\r\n    type: UserActionTypes.SENDING_DISCUSSION_MESSAGE_STATUS\r\n})\r\nexport const sendReplyMessage = replyObject => ({\r\n    type: UserActionTypes.SEND_REPLY,\r\n    payload: replyObject\r\n})\r\nexport const sendingReplyMessageStatus =  () => ({\r\n    type: UserActionTypes.SENDING_REPLY_STATUS\r\n})\r\n\r\nexport const refreshUser = () => ({\r\n    type: UserActionTypes.REFRESH_USER\r\n})\r\n\r\nexport const fetchUserProfile = (userProfile) => ({\r\n   type: UserActionTypes.FETCH_USER_PROFILE,\r\n   payload: userProfile\r\n})  \r\n\r\nexport const toggleUserHeaderOptionsDisplay = (state) => ({\r\n    type: UserActionTypes.TOGGLE_USER_HEADER_OPTIONS_DISPLAY,\r\n    payload:state\r\n})\r\nexport const userLikingPost = () => ({\r\n    type: UserActionTypes.LIKING_POST\r\n})","import React, { useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './autocomplete-input.styles.scss'\r\n\r\nconst AutocompleteInput = ({subjects, ...otherProps }) => {\r\n\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const [activeItem,setActiveItem] = useState(-1)\r\n    const [filteredUsers,setFilteredUsers] = useState([])\r\n    const [value,setValue] = useState('')\r\n    const [inputValue,setInputValue] = useState('')\r\n    const searchFieldInput = useRef(null)\r\n    const subjectSearchResultBox = useRef(null)\r\n    const history = useHistory()\r\n\r\n    const handleKeyPress = async event => {\r\n        if(event.key.length===1){\r\n            setInputValue(event.target.value)\r\n        }\r\n    }\r\n    const handleKeyDownUp = async event => {\r\n        if(event.target.value === ''){\r\n            setActiveItem(-1)\r\n            setInputValue('')\r\n        }\r\n        if(event.keyCode === 40){\r\n            handleKeyDown()\r\n        }else if(event.keyCode === 38){\r\n            handleKeyUp()\r\n        }else if(event.keyCode === 13){\r\n            history.push({pathname:'/search', search:`?q=${value}`})\r\n            setValue('')\r\n            setInputValue('')\r\n        }\r\n    }\r\n    const handleKeyUp = () => {\r\n        if(subjectSearchResultBox.current){\r\n            const children = subjectSearchResultBox.current.children\r\n            var i\r\n            for(i=0; i< children.length; i++){\r\n                children[i].style.backgroundColor = ''\r\n            }\r\n            if(activeItem === -1){\r\n                setActiveItem(children.length-1)\r\n                const temp = children.length-1\r\n                subjectSearchResultBox.current.children[temp].style.backgroundColor = 'grey'\r\n                setValue(subjectSearchResultBox.current.children[temp].children[1].innerHTML)\r\n            }else{\r\n                setActiveItem(activeItem-1)\r\n                const temp = activeItem-1\r\n                if(temp === -1){\r\n                    setValue(inputValue)\r\n                }else{\r\n                    subjectSearchResultBox.current.children[temp].style.backgroundColor = 'grey'\r\n                    setValue(subjectSearchResultBox.current.children[temp].children[1].innerHTML)\r\n                }\r\n            }\r\n       }\r\n    }\r\n    const handleKeyDown = () =>{\r\n        if(subjectSearchResultBox.current){\r\n            const children = subjectSearchResultBox.current.children\r\n            var i\r\n            for(i=0; i< children.length; i++){\r\n                children[i].style.backgroundColor = ''\r\n            }\r\n            if(activeItem === children.length-1){\r\n                setValue(inputValue)\r\n                setActiveItem(-1)\r\n            }else{\r\n                const temp = activeItem+1\r\n                setActiveItem(activeItem+1)\r\n                subjectSearchResultBox.current.children[temp].style.backgroundColor = 'grey'\r\n                setValue(subjectSearchResultBox.current.children[temp].children[1].innerHTML)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetch(`/api/search-users/${value.toLowerCase()}`,{\r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setFilteredUsers(data)\r\n        })\r\n    },[inputValue])\r\n\r\n    const handleChange = async event =>{\r\n        setValue(event.target.value)\r\n        setInputValue(event.target.value)\r\n    }\r\n    return (\r\n        <div >\r\n               <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <div class=\"input-group-text border-right-0 searchbar\" ><i class=\"fa fa-search\"></i></div>\r\n                    </div>\r\n                    <input \r\n                            class=\"form-control pl-0 border-left-0 searchbar\" \r\n                            type=\"search\" \r\n                            placeholder=\"Search\"\r\n                            value={value}\r\n                           onChange={handleChange}\r\n                            onKeyPress={handleKeyPress}\r\n                            {...otherProps}\r\n                           onKeyDown={handleKeyDownUp} ref={searchFieldInput} autoComplete='off'\r\n                            \r\n                    />\r\n                </div>\r\n             {\r\n                (inputValue.length !== 0 || inputValue !== '') && document.activeElement === searchFieldInput.current?\r\n                ( filteredUsers.length !==0 ?\r\n                <div className=\"rounded-0  mt-0 auto-div shadow\" >\r\n                    <ul className=\"p-3 list-unstyled text-white\" ref={subjectSearchResultBox} >\r\n                        {\r\n\r\n                            filteredUsers.map(subject =>\r\n                                <div style={{display:'flex', flexDirection:'row', alignItems:'center',marginBottom:'10px'}}>\r\n                                    <img src={subject.profilePic} style={{width:'40px', height:'40px'}} />\r\n                                    <li className=\"p-2\">{subject.name}</li>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                : null)\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default AutocompleteInput","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signOutSuccess } from '../redux/user/user.actions'\r\nimport AutocompleteInput from './autocomplete-input';\r\nimport './header.styles.scss'\r\n\r\nconst Header = () => {\r\n\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const [userHeader, setUserHeader] = useState(false)\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const dropDownBox = useRef(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n            document.addEventListener('click', handlerClick)\r\n         \r\n            return () => {\r\n               document.removeEventListener('click', handlerClick)\r\n            }\r\n          \r\n    },[userHeader,currentUser])\r\n\r\n    const handlerClick = async e => {\r\n        if(currentUser){\r\n            if(dropDownBox.current.contains(e.target)){\r\n                if(userHeader){\r\n                    setUserHeader(false)\r\n                }else{\r\n                    setUserHeader(true)\r\n                }\r\n            }else {\r\n                if(userHeader){\r\n                    setUserHeader(false)\r\n                }else{\r\n                    setUserHeader(false)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n    <header style={styles.header} className=\"shadow\" >\r\n            <nav style={styles.nav}>\r\n                  <div style={styles.leftNav}>\r\n                            <li style={{fontSize:'20px'}}>\r\n                                <Link className=\"nav-link text-white\" style={{fontFamily:'Grenze Gotisch, cursive'}} to = {'/'}>StudyMate</Link>\r\n                            </li>\r\n                            \r\n                            {\r\n                              currentUser \r\n                              ? <p style={{display:\"flex\",alignItems:'center',marginTop:'10px', marginLeft:'20px', marginRight:'300px'}}>\r\n                                    <AutocompleteInput \r\n                                       placeholder='Search StudyMate...' \r\n                                       style={styles.searchBar} \r\n                                    />\r\n                                </p>\r\n                              : null\r\n                          }\r\n                            <li  style={styles.listItem}>\r\n                                <Link to={'/home'} className=\"nav-link text-white\" >{currentUser ? <i class=\"fas fa-home\"></i >: null }</Link> \r\n                                \r\n                            </li>\r\n                            <li style={styles.listItem} >\r\n                                <Link to={'/watch'} className=\"text-white\" >{currentUser ? <i class=\"fab fa-youtube\"></i> : null} </Link>\r\n                            </li>\r\n                            <li style={styles.listItem}>\r\n                                 <Link to={'/new-post'} className=\"text-white\">{currentUser ? <i class=\"fas fa-plus\"></i>: null } </Link>\r\n                            </li>\r\n                            <li style={styles.listItem}>\r\n                                 <Link to={'/chats'} className=\"text-white\" >{currentUser ? <i class=\"fas fa-comment-dots\"></i> : null}</Link>\r\n                            </li>\r\n                            <li style={styles.listItem}>\r\n                                <Link to={'/notifications'} className=\"text-white\">{currentUser ?<i class=\"fas fa-bell\"></i> : null}</Link>\r\n                            </li>\r\n                            {\r\n                              currentUser ?\r\n                                   <div \r\n                                       className=\"rounded\" \r\n                                       style={{  marginLeft:'60px', display:'flex', flexDirection:'column'}}\r\n                                   >\r\n                                      <Link\r\n                                         className=\"text-white text-decoration-none\"\r\n                                      >\r\n                                        <li \r\n                                            style={{display:'flex', alignItems:'center',flexDirection:'row',\r\n                                                    justifyContent:'space-between', height:'30px',\r\n                                                    paddingTop:'5px', paddingRight:'5px',paddingLeft:'5px',\r\n                                                    border:'0px'\r\n                                                }}\r\n                                            ref={dropDownBox} name=\"dropDownBox\"\r\n                                        >\r\n                                              <img src={currentUser.profilePic} style={styles.profileImage} className=\"rounded-circle\" />\r\n                                               <i class=\"ml-1 flex-end fas fa-caret-down\"></i>                               \r\n                                        </li>\r\n                                        </Link>\r\n                                        <div \r\n                                            style={{display:'flex', flexDirection:'column',alignItems:'start', marginTop:'10px'}} \r\n                                        >\r\n                                            {\r\n                                                userHeader ?\r\n                                                        <ol className=\" dropdownheader\">\r\n                                                            <li className=\" border-bottom p-2\">\r\n                                                                Signed in as <strong>{currentUser.username}</strong>\r\n                                                            </li>\r\n\r\n                                                            <li className=\"m-2\">\r\n                                                                <Link  style={{color:'#c4c3ca'}} className=\"text-decoration-none\" to={`/profile/${currentUser.username}`} >\r\n                                                                   <i  class=\"fas fa-user-circle mr-2\"></i>\r\n                                                                   Your profile\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                            <li className=\"m-2\">\r\n                                                                <Link  style={{color:'#c4c3ca'}} className=\"text-decoration-none\">\r\n                                                                  <i class=\"fas fa-cog mr-2\"></i>\r\n                                                                  Settings\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                            <li className=\"m-2\">\r\n\r\n                                                                <Link \r\n                                                                   style={{color:'#c4c3ca'}}\r\n                                                                    className=\"text-decoration-none\"\r\n                                                                    onClick={() =>{\r\n                                                                        dispatch(signOutSuccess())\r\n                                                                        setUserHeader(false)\r\n                                                                    }}>\r\n                                                                    <i class=\"fas fa-sign-out-alt mr-2\"> </i>\r\n                                                                    Sign out\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                        </ol>\r\n                                                : null\r\n                                            }\r\n                                        </div>\r\n                                   </div>\r\n                                : null \r\n                            }\r\n                           \r\n                  </div>\r\n                  <div style={styles.centerNav}>\r\n                            \r\n                  </div>\r\n   \r\n                  <div style={styles.rightNav}>\r\n                      \r\n                        <li style={styles.rightNavItem}>\r\n                            <Link to=\"/signin\"  className=\"text-white\">{currentUser ? null : <i  class=\"fas fa-sign-in-alt \"> <span style={{fontFamily:'Grenze Gotisch, cursive'}}>Sign In </span> </i> }</Link>\r\n                        </li>\r\n                        <li style={styles.rightNavItem}>\r\n                            <Link to=\"/signup\" className=\"text-white\">{currentUser ? null : <i  class=\"fas fa-user-plus\"> <span style={{fontFamily:'Grenze Gotisch, cursive'}}>Sign up</span> </i>}</Link>\r\n                        </li>\r\n                           \r\n                    </div>\r\n            </nav> \r\n        </header>\r\n    );\r\n}\r\nconst styles = {\r\n    header: {\r\n        alignItems:'center',\r\n        backgroundColor: '#1f2029',\r\n        position: 'fixed',\r\n        marginBottom: '20px',\r\n        width: '100%',\r\n        height:'60px',\r\n        zIndex:'20',\r\n\r\n\r\n    },\r\n    nav: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        listStyleType: 'none',\r\n        alignItems:'center',\r\n    },\r\n    rightNav: {\r\n        display: 'flex',\r\n        justifyContent:'flex-end',\r\n        alignItems:'center',\r\n        marginRight:'60px',\r\n        top:8,\r\n        right:0,\r\n        position:'fixed',\r\n\r\n    },\r\n    centerNav: {\r\n        display: 'flex',\r\n        marginLeft:'40px',\r\n        alignItems:'center',\r\n    },\r\n    leftNav: {\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        marginLeft:'20px', \r\n    },\r\n    searchBar: {\r\n       width:'300px',\r\n       fontSize:'15px',\r\n    },\r\n    listItem: {\r\n        marginLeft: '40px',\r\n        fontSize:'30px'\r\n    },\r\n    rightNavItem:{\r\n        marginLeft: '40px',\r\n        fontSize:'22px'\r\n    },\r\n    profileImage: {\r\n        height: '40px',\r\n        width: '40px',\r\n        marginRight: '5px',\r\n        marginTop:'6px'\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';  \r\nimport './welcomepage.styles.scss';\r\nimport StudyingImage from '../../assets/studying-image.jpg'\r\n\r\n\r\nconst WelcomePage = () =>  {\r\n    return (\r\n        <div className=\"welcome-body\">\r\n                <div className=\"intro\">\r\n                    <div className=\"introHead\">StudyMate</div>\r\n                    <div className=\"introBody\">\r\n                        StudyMate is a platform for students where they get to interact with others who have similar interests with them.\r\n                        It also helps them to find the closest study partner from their current location.\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                    <Link className=\"p-3 buttn text-decoration-none\" to='/signup'>Get started.</Link>\r\n                    </div>\r\n                </div>\r\n                   \r\n                <div className=\"picDiv\">\r\n                   <img src={StudyingImage}className=\"welcome-picture\" />\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WelcomePage;","import React,{useState} from 'react';\r\nimport { signInSuccess, signInToken } from '../redux/user/user.actions';\r\nimport { useDispatch } from 'react-redux'\r\nimport './signin.styles.scss'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst SignIn = () => {\r\n  \r\n    const [userCredentials, setUserCredentials] = useState({emailOrUsername:'',password:'' })\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [errorSigningIn,setErrorSigningIn] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const {emailOrUsername,password} = userCredentials\r\n\r\n    const handleChange = async event => {\r\n        const {name,value} = event.target\r\n        setUserCredentials({...userCredentials, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        setIsLoading(true)\r\n        setErrorSigningIn('')\r\n        event.preventDefault()\r\n        fetch('/signin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n            body: JSON.stringify(userCredentials)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.message){\r\n                if(!!data.message.details){\r\n                    setErrorSigningIn(data.message.details[0].message)\r\n                    console.log(data.message.details[0].message)\r\n                }else{\r\n                    setErrorSigningIn(data.message)\r\n                    console.log(data.message)\r\n                }\r\n                setIsLoading(false)\r\n            }else{\r\n                dispatch(signInSuccess(data.user))\r\n                dispatch(signInToken(data.authToken))\r\n                setUserCredentials({emailOrUsername:'',password:'' })\r\n            }\r\n        })\r\n        \r\n    }\r\n    return (\r\n        \r\n        \r\n        <div style={{opacity: `${isLoading ? '0.4' : '1'}`}}>\r\n               {\r\n                    isLoading ? \r\n                    <div className=\" position-absolute\" style={{marginLeft:'673px',marginTop:'200px'}}>\r\n                    <Spinner animation=\"border\" variant=\"white\" />\r\n                    </div>\r\n                    : null\r\n                }\r\n         \r\n            <div class=\"login-wrap\">\r\n                <div class=\"login-html\">\r\n                    <input id=\"tab-1\" type=\"radio\" name=\"tab\" class=\"sign-in\" checked /><label for=\"tab-1\" class=\"tab\" style={{fontFamily:'Grenze Gotisch, cursive'}}>Sign In</label>\r\n                    <form class=\"login-form\" onSubmit={handleSubmit}>\r\n                        <div class=\"sign-in-htm\">\r\n                            <div class=\"group\">\r\n                                <input type=\"text\" placeholder=\"Email or username\"  className={`${errorSigningIn ? 'border-danger': 'border-dark'} input`} name=\"emailOrUsername\" value={emailOrUsername} onChange={handleChange} />\r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input type=\"password\" placeholder=\"Password\"  className={`${errorSigningIn ? 'border-danger': 'border-dark'} input`} name=\"password\" value={password} onChange={handleChange} data-type=\"password\" />\r\n                                <small className={`${errorSigningIn.length>0 ? 'text-danger ml-1': 'd-none'}`}>{errorSigningIn}</small>\r\n                            \r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input id=\"check\" type=\"checkbox\" class=\"check\" checked />\r\n                                <label for=\"check\" style={{fontFamily:'Grenze Gotisch, cursive'}}><span class=\"icon\"></span> Keep me Signed in</label>\r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input type=\"submit\" class=\"button\" value=\"Sign In\" />\r\n                            </div>\r\n                            <div class=\"hr\"></div>\r\n                            <div class=\"foot-lnk\">\r\n                                <a href=\"#\" style={{color:'#A11919'}}>Forgot Password?</a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    );\r\n}\r\nexport default SignIn;","import React, {useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport './signin.styles.scss'\r\nimport { useDispatch} from 'react-redux'\r\nimport { signInSuccess, signInToken } from '../redux/user/user.actions';\r\nimport './signin.styles.scss'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\n\r\nconst SignUp  = () => {\r\n\r\n    const [userCredentials, setUserCredentials] = \r\n    useState({name:'',email:'',username:'',password:'' })\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [errorSigningIn,setErrorSigningIn] = useState('')\r\n    const [emailError,setEmailError]=useState('')\r\n    const [nameError,setNameError]=useState('')\r\n    const [passwordError,setPasswordError]=useState('')\r\n    const [usernameError,setUsernameError] = useState('')\r\n    const [result,setResult] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const {name,email,username,password} = userCredentials\r\n\r\n    const handleChange = async event => {\r\n        const {name,value} = event.target\r\n        setUserCredentials({...userCredentials, [name]: value})\r\n    }\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n        setEmailError('')\r\n        setNameError('')\r\n        setPasswordError('')\r\n        setUsernameError('')\r\n        setResult('')\r\n        setIsLoading(true)\r\n\r\n        fetch('/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n            body: JSON.stringify(userCredentials)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            if(data.details){\r\n                const temp = data.details[0].message\r\n                if(temp.includes('email')){\r\n                    setEmailError(temp)\r\n                }else if(temp.includes('name')){\r\n                    if(temp.includes('username')){\r\n                        setUsernameError(temp)\r\n                    }else{\r\n                        setNameError(temp)\r\n                    }\r\n                }else if(temp.includes('password')){\r\n                    setPasswordError(temp)\r\n                }\r\n            }else if(data.error){\r\n                const temp = data.error\r\n                if(temp.includes('name')){\r\n                    setNameError(temp)\r\n                }else if(temp.includes('email')){\r\n                    setEmailError(temp)\r\n                }\r\n            }else{\r\n                dispatch(signInSuccess(data.user))\r\n                dispatch(signInToken(data.authToken))\r\n                setUserCredentials({name:'',email:'',username:'',password:'' })\r\n            }\r\n           setIsLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={{opacity: `${isLoading ? '0.4' : '1'}`}}>\r\n               {\r\n                    isLoading ? \r\n                    <div className=\" position-absolute\" style={{marginLeft:'673px',marginTop:'200px'}}>\r\n                    <Spinner animation=\"border\" variant=\"white\" />\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                    \r\n            <div class=\"login-wrap\">\r\n                <div class=\"login-html\">\r\n                    <input id=\"tab-2\" type=\"radio\" name=\"tab\" class=\"sign-up\" checked/><label for=\"tab-2\" style={{fontFamily:'Grenze Gotisch, cursive'}} class=\"tab\">Sign Up</label>\r\n                    <form class=\"login-form\" onSubmit={handleSubmit}>\r\n                        <div class=\"sign-up-htm\">\r\n                            <div class=\"group\">\r\n                                <input id=\"name\" placeholder=\"Name\" name=\"name\" value={name} onChange={handleChange}  type=\"text\" className={`${nameError.length>0 ? 'border-danger': 'border-dark'} input`} />\r\n                                <small className={`${nameError.length>0 ? 'text-danger ml-2': 'd-none' }`}>{nameError}</small>\r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input id=\"pass\" placeholder=\"Email\" type=\"email\" name=\"email\" value={email} onChange={handleChange} className={`${emailError.length>0 ? 'border-danger': 'border-dark'} input`}  />\r\n                                <small className={`${emailError.length>0 ? 'text-danger ml-2' : 'd-none'}`}>{emailError}</small>\r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input id=\"pass\" placeholder=\"Password\" type=\"password\" className={`${passwordError.length>0 ? 'border-danger': 'border-dark'} input`}  name=\"password\" value={password} onChange={handleChange} data-type=\"password\"/>\r\n                                <small className={`${passwordError.length>0 ? 'text-danger': 'd-none'}`}>{passwordError}</small>\r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input id=\"pass\" type=\"text\" placeholder=\"Username\" name=\"username\" value={username} onChange={handleChange} className={`${usernameError.length>0 ? 'border-danger': 'border-dark'} input`} />\r\n                                <small className={`${usernameError.length>0 ? 'text-danger' : 'd-none'}`}>{usernameError}</small>\r\n                            </div>\r\n                            <div class=\"group\">\r\n                                <input type=\"submit\" class=\"button\" value=\"Sign Up\" />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const LinkStyles = styled(Link)`\r\n  fontSize: 10px;\r\n  color: white;\r\n  fontFamily: sans\r\n`;\r\n\r\n","import React from 'react';\r\nimport Media from 'react-bootstrap/Media';\r\nimport './chat-tab.styles.scss';\r\nimport { LinkStyles } from '../styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nconst ChatTab = ({chat}) => {\r\n   \r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const currentUserId = currentUser._id\r\n\r\n    let mateName,mateId,img\r\n    if(chat.user1._id === currentUserId){\r\n        mateName = chat.user2.username\r\n        mateId = chat.user2._id\r\n        img = chat.user2.profilePic\r\n    }else{\r\n        mateName = chat.user1.username\r\n        mateId = chat.user1._id\r\n        img = chat.user1.profilePic\r\n    } \r\n    return (\r\n      <div className=\"  p-2\" style={{height:'75px'}}>\r\n          <div className=\"chat-tab h-100\">\r\n          <LinkStyles to={`/chats/${chat._id}`} className=\"text-decoration-none\">\r\n           <Media>\r\n                <p  style={{width:'50px',height:'50px'}}>\r\n                    <img src={img} className=\"h-100 w-100  rounded-circle\" />\r\n                </p>\r\n                <Media.Body className=\"ml-1\">\r\n                    <div className=\" mt-2\" style={{fontFamily:'Arial, sans-serif', fontSize:'14px'}}>{mateName}</div>\r\n                    <div style={{fontSize:'10px', display:'flex', flexDirection:'row', alignItems:'center', color:'grey', width:'40px', justifyContent:'space-between'}}><i class=\"fa fa-circle online\" style={{color:'green'}}></i> online</div>\r\n                    {/* <p className=\"\">\r\n                        {\r\n                          chat.messages.length>0 ?  \r\n                          chat.messages[chat.messages.length-1].message_body.substring(0,20)\r\n                          :null\r\n                        }\r\n                    </p> */}\r\n                </Media.Body>\r\n            </Media>\r\n            </LinkStyles>\r\n          </div>\r\n          \r\n      </div>\r\n    );\r\n}\r\nexport default ChatTab;","import React, {useState,useRef,useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { sendMessageStart, sendingMessageStatus } from '../redux/user/user.actions';\r\nimport  './chat-body.styles.scss'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst ChatBody = ({match}) => {\r\n\r\n   const [message, setMessage] = useState('');\r\n   const [chat, setChat] = useState({user1:{}, user2:{}, messages:[], _id:''})\r\n   const chatbox = useRef(null)\r\n   const inputField = useRef(null)\r\n   const dispatch = useDispatch()\r\n   const currentUser = useSelector(state => state.user.currentUser)\r\n   const userToken = useSelector(state => state.user.userToken)\r\n   const currentUserId = currentUser._id\r\n   let  mateName,mateId, chatId, img\r\n   chatId = chat._id;\r\n   if(chat.user1._id === currentUserId){\r\n       mateName = chat.user2.username\r\n       mateId = chat.user2._id\r\n       img = chat.user2.profilePic\r\n   }else{\r\n       mateName = chat.user1.username\r\n       mateId = chat.user1._id\r\n       img = chat.user2.profilePic\r\n   }\r\n   \r\n   useEffect(() => {\r\n       fetch(`/api/chat/${match.params.chatId}`,{       \r\n        headers: {\r\n            'auth-token': `${userToken}`\r\n        }\r\n    })\r\n       .then(response => response.json())\r\n       .then(data => {\r\n            setChat(data)\r\n        })\r\n   },[match])\r\n   useEffect(() => {\r\n       chatbox.current.scrollTop = 10000\r\n       inputField.current.focus()\r\n   })\r\n   const handleSubmit = async event => {\r\n        const message = inputField.current.value\r\n        event.preventDefault();\r\n        if(message.length > 0){\r\n            dispatch(sendMessageStart({message,chatId,mateId,currentUserId}))\r\n            dispatch(sendingMessageStatus())\r\n            inputField.current.value = ''\r\n            inputField.current.focus()\r\n        }\r\n   }\r\n    return (\r\n        <div className=\" h-100 bg-transparent body \"  >\r\n            {\r\n               chat ?\r\n                 <div>\r\n                    <div className=\" p-3\" style={{ height:'80px',fontSize:'20px', backgroundColor:'transparent'}}>\r\n                        <div style={{ height:'80px',fontSize:'20px'}}>\r\n                            <div style={{display:'flex', flexDirection:'row'}}>\r\n                                <div style={{width:'50px', height:'50px'}}>\r\n                                <Link to={`/profile/${mateName}`}>\r\n                                    <img src={img} className=\" w-100 h-100 rounded-circle\" />\r\n                                </Link>\r\n                                </div>\r\n                                <div className=\"chat-top\">\r\n                                    <Link to={`/profile/${mateName}`}>\r\n                                    <div className=\" text-white\">{mateName}</div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <div ref={chatbox}className=\"overflow-auto mt-2 p-2 chat-box\"style={{height:'320px', width:'100%',paddingBottom:'10px'}}>\r\n                                {\r\n                                    chat.messages?\r\n                                    chat.messages.map(message => {\r\n                                    return( \r\n                                        <p className={`${message.sender._id == currentUserId ? 'ml-auto sent-message' : 'mr-auto received-message'} text-white rounded  w-50 text-break`}>\r\n                                            {message.message_body}\r\n                                        </p>\r\n                                    )})\r\n                                    :<div className=\" position-absolute\" style={{marginLeft:'250px',marginTop:'120px'}}>\r\n                                        <Spinner animation=\"border\" variant=\"green\" />\r\n                                    </div>\r\n                                }     \r\n                    </div>\r\n                    <div className=\"border-top\" style={{height:'160px', fontSize:'20px'}}>\r\n                        <form onSubmit={handleSubmit} className=\"d-flex flex-column  align-items-baseline\">\r\n                                <textarea ref={inputField}  type='text'  className=\" send-input pl-3 border-bottom\" placeholder=\"Write a new message\"/>\r\n                                <div className=\"message-options\">\r\n                                    <div className=\"left-options text-white\">\r\n                                    <i class=\"fas fa-paperclip\"></i>\r\n                                    <i class=\"far fa-smile\"></i>\r\n                                    </div>\r\n                                    <button className=\"right-options\" style={{backgroundColor:'rgba(40,57,101,.9)'}}>send</button>\r\n                                </div>\r\n                        </form>\r\n                    </div>\r\n                 </div>\r\n               :<div className=\" position-absolute\" style={{marginLeft:'130px',marginTop:'150px'}}>\r\n                    <Spinner animation=\"border\" variant=\"white\" />\r\n                </div>\r\n            }\r\n           \r\n        </div>\r\n    );\r\n}\r\nexport default ChatBody;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport ChatTab from '../components/chat-tab/chat-tab.component';\r\nimport ChatBody from '../components/chat-body.component';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './chats-page.scss'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst ChatsPage = ({match, isSending}) => {\r\n\r\n    const [chats,setChats] = useState([])\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/chats/${currentUser._id}`,{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data =>  {\r\n            setChats(data)\r\n        })\r\n        \r\n    },[isSending])\r\n        return (\r\n                <div style={styles.container}>\r\n                     <div style={styles.chats} className=\"border-right\">\r\n                         <div className=\"new-message\">\r\n\r\n                         </div>\r\n                         <div className=\"border-bottom searchchats\">\r\n                             <input type=\"search\" className=\"searchBut\" placeholder=\"Search chats...\" />\r\n                         </div>\r\n                         <div style={styles.users}>\r\n                            {\r\n                                chats?\r\n                                chats.map(chat => (\r\n                                        <div className=\"ml-1\" >\r\n                                            <div className=\" overflow-auto\" >\r\n                                                {\r\n                                                        <ChatTab  chat={chat} /> \r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                ))\r\n                                :<div className=\" position-absolute\" style={{marginLeft:'130px',marginTop:'150px'}}>\r\n                                    <Spinner animation=\"border\" variant=\"white\" />\r\n                                </div>\r\n                            }  \r\n                         </div>\r\n                     </div>\r\n                    <div style={styles.chat}>\r\n                        <Switch>\r\n                            <Route  path={`${match.path}/:chatId`} render = {props => <ChatBody {...props}/>} />\r\n                        </Switch> \r\n                    </div>\r\n                </div>\r\n   )        \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isSending: state.user.isSending\r\n})\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginTop:'60px',\r\n        width:'100%',\r\n        height:'560px'\r\n        \r\n    },\r\n    chats: {\r\n        width: '20%',\r\n        border:'1px solid white',\r\n        backgroundColor: '#1f2029',\r\n        backgroundImage: `url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat.svg')`,\r\n        boxShadow:' 0 8px 24px rgba(149,157,165,.2)',\r\n    },\r\n    chat: {\r\n        width: '40%',\r\n     \tbackgroundColor:'rgba(40,57,101,.9)',\r\n        height:'560px',\r\n        backgroundColor: '#1f2029',\r\n        backgroundImage: `url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat.svg')`,\r\n        border: '1px solid white'\r\n    },\r\n    users: {\r\n        overflow:'auto',\r\n        height:'480px'\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatsPage);","import React from 'react'\r\nimport Media from 'react-bootstrap/Media';\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport './notification.styles.scss'\r\n\r\nconst  Notification = ({notification}) => {\r\n    \r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    let pathname, search\r\n\r\n    if(notification.type == \"like-discussion\"){\r\n        pathname = `/profile/${currentUser.username}`\r\n        search = `post-id=${notification.typeId}`\r\n    }else if(notification.type == \"comment\"){\r\n        pathname = `/discussions/${notification.parentId}`\r\n        search = `comment-id=${notification.typeId}`\r\n    }\r\n\r\n    return (\r\n        <div className=\"noti-body\">\r\n            <div>\r\n            <Link to={{pathname:pathname, search:search}} className=\"text-decoration-none text\">\r\n                <Media className=\"\" >\r\n                    <p className=\"rounded-circle  mr-3\" style={{width:'60px', height:'60px'}}>\r\n                        <img src={notification.sender.profilePic} className=\"h-100 w-100 rounded-circle\"/>                        \r\n                    </p>\r\n                    <Media.Body>\r\n                        <h5 className=\"  font-weight-normal text-break\" style={{color:'black', fontSize:'15px', marginTop:'10px'}}>{notification.body}</h5>\r\n                    </Media.Body>\r\n                </Media>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Notification from '../components/notification'\r\nimport { useSelector } from 'react-redux'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Notifications = () => {\r\n\r\n    const [notifications,setNotifications] = useState([])\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/notifications/${currentUser._id}`,{    \r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => setNotifications(data))\r\n      window.scrollTo(0,0)\r\n    },[])\r\n\r\n    return (\r\n            <div style={styles.container}>\r\n                    <div style={styles.notifications}  >\r\n                        {\r\n                            notifications.length>0?\r\n                            notifications.map(notification => (\r\n                                <Notification notification = {notification} />\r\n                            ))\r\n                            :<div className=\" position-absolute\" style={{marginLeft:'260px',marginTop:'150px'}}>\r\n                              <Spinner animation=\"border\" variant=\"white\" />\r\n                             </div>\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        height:'100%',\r\n        marginTop:'100px'\r\n    },\r\n    notifications: {\r\n        width:'45%'\r\n    }\r\n}\r\n\r\nexport default Notifications","import { type } from \"os\"\r\n\r\nexport const addAllDiscussions = (discussions) => ({\r\n    type: 'ADD_ALL_DISCUSSIONS',\r\n    payload: discussions\r\n})\r\n\r\nexport const addDiscussionsUsers = (users) => ({\r\n    type: 'ADD_DISCUSSIONS_USERS',\r\n    payload: users\r\n})\r\n\r\nexport const addDiscussionsCreators = (creators) => ({\r\n    type: 'ADD_DISCUSSIONS_CREATORS',\r\n    payload: creators\r\n})\r\nexport const addWatchVideos = (videos) => ({\r\n    type: 'ADD_WATCH_VIDEOS',\r\n    payload: videos\r\n})","import React, { useState, useEffect, useRef } from 'react'\r\nimport './video-player.scss'\r\n\r\nconst VideoPlayer = ({src, width, height, top}) => {\r\n   \r\n    const video = useRef(null)\r\n    const blueJuice = useRef(null)\r\n    const controls = useRef(null)\r\n    const playIcon = useRef(null)\r\n    const [playing,setPlaying] = useState(false)\r\n\r\n    const togglePlay = () => {\r\n        if(video.current.paused){\r\n           setPlaying(true)\r\n           video.current.play()\r\n           playIcon.current.style.visibility = 'hidden'\r\n        }else{\r\n            setPlaying(false)\r\n            video.current.pause()\r\n        }\r\n    }\r\n    const handleTimeUpdate = () => {\r\n        const juicePos = video.current.currentTime / video.current.duration\r\n        blueJuice.current.style.width = juicePos*100+\"%\"\r\n        if(video.current.ended){\r\n            setPlaying(false)\r\n            playIcon.current.style.visibility = 'visible'\r\n        }\r\n    }\r\n    const handleMouseOver = () => {\r\n        controls.current.style.visibility = 'visible'\r\n    }\r\n    const handleMouseOut = () => {\r\n        controls.current.style.visibility = 'hidden'\r\n    }\r\n    const handlePlayIconClick = () => {\r\n        playIcon.current.style.visibility = 'hidden'\r\n        video.current.play()\r\n        setPlaying(true)\r\n\r\n    }\r\n    const handleExpandClick = () => {\r\n        video.current.requestFullscreen()\r\n    }\r\n\r\n\r\n   return (\r\n      <div\r\n        onMouseOver={handleMouseOver} \r\n        onMouseOut={handleMouseOut}\r\n      >\r\n          \r\n            <div style={{display:'flex', flexDirection:'row', width:width}}>\r\n                <video \r\n                    ref={video} \r\n                    className=\"video-screen\" \r\n                    width={width}\r\n                    height={height}\r\n                    src={src}  \r\n                    onClick = {togglePlay}\r\n                    onTimeUpdate = {handleTimeUpdate}\r\n                >\r\n\r\n                </video>\r\n                \r\n                <div \r\n                    className=\"play-icon\" \r\n                    ref={playIcon} \r\n                    onClick={handlePlayIconClick}\r\n                    style={{top:top}}\r\n                \r\n                >\r\n                    <i class=\"far fa-play-circle text-white\"></i>\r\n                </div>\r\n            </div>\r\n           \r\n            <div className=\"controls\" ref={controls}>\r\n                <button onClick={togglePlay}>\r\n                    {\r\n                        playing?\r\n                           <i class=\"fas fa-pause\"></i>\r\n                        :  <i class=\"fas fa-play\"></i>\r\n\r\n                    }\r\n                </button>\r\n                <button className=\"time\">\r\n                    2.00/5.30\r\n                </button>\r\n                <div className=\"progress-bar bg-white\">\r\n                    <div className=\"blue-juice\" ref={blueJuice}>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <button>\r\n                    <i class=\"fas fa-cog\"></i>\r\n                </button> */}\r\n                <button\r\n                  onClick={handleExpandClick}\r\n                >\r\n                   <i class=\"fas fa-expand-alt\"></i>\r\n                </button>\r\n                <button>\r\n                   <i class=\"fas fa-volume-up\"></i>\r\n                </button>\r\n            </div>\r\n      </div>\r\n   )\r\n\r\n}\r\nexport default VideoPlayer","import React, { useState, useEffect } from 'react'\r\nimport { Media } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\nimport { userLikingPost } from '../redux/user/user.actions';\r\nimport ReactPlayer from 'react-player'\r\nimport VideoPlayer from './video-player';\r\nimport './post.styles.scss'\r\n\r\nconst Post = React.forwardRef(({discussion, height, width, top}, ref) => {\r\n   \r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const currentUserId = currentUser._id\r\n    const dispatch =  useDispatch()\r\n    const likePost =  () => {\r\n        fetch(`/api/like/${discussion._id}`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'auth-token': `${userToken}`\r\n            },\r\n            body: JSON.stringify({currentUserId})\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n     }\r\n   return (\r\n      <div style={styles.container} className=\"postbody\" ref={ref} width={width} height={height}>\r\n                <Media className=\"p-2 mb-3 h-50\"  style={{}}>\r\n                    <p className=\"bg-dark rounded-circle  mr-1 text-white text-center mr-3\" style={{width:'30px', height:'30px'}}>\r\n                        <Link to={`/profile/${discussion.creator.username}`}>\r\n                        <img src={discussion.creator.profilePic} className=\"h-100 w-100 rounded-circle\"/>  \r\n                        </Link>                      \r\n                    </p>\r\n                    <Media.Body>\r\n                        <Link className=\"text-white\" to={`/discussions/${discussion._id}`} style={{textDecoration:'none'}}>\r\n\r\n                        <h6 className=\"font-weight-bold mb-2\">\r\n                           <Link  style={{color:'black',fontSize:'15px'}}  to={`/profile/${discussion.creator.username}`}>{discussion.creator.username}</Link>\r\n                        </h6> \r\n                            <h4 className=\" text-break font-weight-normal\" style={{color:'black',fontSize:'15px'}}>{ReactHtmlParser(discussion.topic)}</h4>\r\n                        {\r\n                            discussion.video.length>0?\r\n                                <VideoPlayer src={discussion.video} width={width} height={height} top={top} />\r\n                            :null\r\n                        }\r\n                        {\r\n                            discussion.image.length>0?\r\n                                    <img src={discussion.image} style={styles.postImage} />\r\n                            : null\r\n                        } \r\n                        </Link>  \r\n                        <div style={{display:'flex',justifyContent:'space-between', flexDirection:'row', marginTop:'10px', width:'90%'}}>\r\n                           <Link to={`/discussions/${discussion._id}`} className=\"text-decoration-none\">\r\n                               <div style={styles.postfooter}>\r\n                                  <i class=\"far fa-comment mr-1\"  style={styles.icon}></i>\r\n                                  <div >{discussion.messages.length}</div> \r\n                               </div>\r\n                                    \r\n                            </Link>                     \r\n                            <Link className=\"text-decoration-none\">\r\n                                <div style={styles.postfooter}>\r\n                                    <i class=\"fa fa-thumbs-up mr-1\"  \r\n                                       onClick={() => likePost()}   \r\n                                        style={styles.icon}>\r\n                                    </i>\r\n                                    <div >{discussion.likes}</div> \r\n                                </div>\r\n                            </Link>               \r\n                            <Link className=\"text-decoration-none\">\r\n                                    <div style={styles.postfooter}>\r\n                                        <i class=\"fa fa-share mr-1\"  \r\n                                            style={styles.icon}>\r\n                                        </i>\r\n                                        <div ></div> \r\n                                    </div>\r\n                            </Link>\r\n                            <Link className=\"text-decoration-none\">\r\n                                    <div style={styles.postfooter}>\r\n                                        <i class=\"fas fa-eye-slash mr-1\"  \r\n                                            style={styles.icon}>\r\n                                        </i>\r\n                                        <div ></div> \r\n                                    </div>\r\n                            </Link>\r\n                        </div>\r\n                    </Media.Body>\r\n                </Media>\r\n      </div>\r\n   )\r\n\r\n})\r\nconst  styles = {\r\n   container: {\r\n       //height: '550px',\r\n       backgroundColor:'white',\r\n      // background:'rgba(40,57,101,.9)',\r\n       marginBottom:'10px',\r\n       borderRadius:'5px',\r\n       width:'550px'\r\n       \r\n   },\r\n   postImage: {\r\n       height:'360px',\r\n       width: '440px',\r\n   },\r\n   icon:{\r\n       cursor: 'pointer',\r\n       fontSize:'18px',\r\n       marginTop:'2px'\r\n   },\r\n   postfooter:{\r\n       display:'flex',\r\n       flexDirection:'row',\r\n       alignItems:'center',\r\n       color:'rgba(0,0,0,0.65)',\r\n\r\n   }\r\n\r\n}\r\n\r\n\r\nexport default Post","import React, { useState, useEffect, useCallback } from 'react'\r\nimport Post from './post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { updateUserProfile, refreshUser, signInSuccess, fetchUserProfile } from '../redux/user/user.actions';\r\n\r\n\r\nconst CurrentUserPosts = ({match})  => { \r\n  \r\n    const location = useLocation()\r\n    const query = new URLSearchParams(location.search)\r\n    const postId = query.get('post-id')\r\n\r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const [userPosts,setUserPosts] = useState([])\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    \r\n\r\n    const likedPost = useCallback(node => {\r\n        if(node !== null){\r\n            window.scrollTo(0,0)\r\n            node.scrollIntoView({ behavior: 'smooth'})\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        fetch(`/api/profile/${match.params.username}`,{   \r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n              dispatch(fetchUserProfile(data.user))\r\n              setUserPosts(data.userPosts)\r\n        })\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Posts</h4>\r\n            {\r\n              userPosts.map(post => (\r\n                <div>\r\n                    {\r\n                        post._id == postId?\r\n                           <Post discussion={post} ref={likedPost} width=\"440px\" height=\"360px\" top=\"130px\"/>\r\n                        :  <Post discussion={post} width=\"440px\" height=\"360px\" top=\"130px\"/>\r\n                    }\r\n                </div>\r\n                \r\n            ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default CurrentUserPosts\r\n","import React, { useEffect } from 'react'\r\nimport Post from './post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\n\r\nconst RepliedPosts = ()  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Replied Posts</h4>\r\n            {\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\" />\r\n                ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default RepliedPosts","import React, { useEffect } from 'react'\r\nimport Post from './post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\n\r\nconst LikedPosts = ()  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{   \r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Liked Posts</h4>\r\n            {\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\" />\r\n                ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default LikedPosts\r\n","import React, { useEffect } from 'react'\r\nimport Post from './post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\n\r\nconst SharedPosts = ()  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Shared Posts</h4>\r\n            {\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\" />\r\n                ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default SharedPosts","import React from 'react'\r\nimport  {Col,Row, Modal, Container, Button} from 'react-bootstrap'\r\nimport { useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport { refreshUser, signInSuccess, fetchUserProfile } from '../redux/user/user.actions';\r\nimport Subject from './subject-paragraph'\r\nimport './edit-profile-modal.styles.scss'\r\nimport $ from 'jquery'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateUserProfile } from '../redux/user/user.actions'\r\nimport axios from 'axios'\r\n\r\n\r\nconst  EditProfileModal = (props) =>  {\r\n\r\n  const currentUser = useSelector(state => state.user.currentUser)  \r\n  const userToken = useSelector(state => state.user.userToken)\r\n  const currentUserId = currentUser._id\r\n  const subjectField = useRef(null)\r\n  const [subject,setSubject] = useState('')\r\n  const [subjectsAdded,setSubjectsAdded] = useState([])\r\n  const [name,setName] = useState(currentUser.name)\r\n  const [username,setUsername] = useState(currentUser.username)\r\n  const dispatch = useDispatch()\r\n  const [upload,setUpload] = useState(false)\r\n  const [selectedFile,setSelectedFile] = useState(null)\r\n  const [img,setImg] = useState(currentUser.profilePic)\r\n  const uploadedFile = useRef(null)\r\n  const image = useRef(null)\r\n\r\n  const previewImage = event => {\r\n    setUpload(false)\r\n    const reader = new FileReader()\r\n    const file = uploadedFile.current.files[0]\r\n    reader.addEventListener('load', () => {\r\n        image.current.src = reader.result\r\n        setSelectedFile(uploadedFile.current.files[0])\r\n        setUpload(true)\r\n        },false)\r\n    if(file){\r\n      reader.readAsDataURL(file)\r\n    }\r\n  }\r\n  const updatePicture = () => {\r\n    if(upload){\r\n      const ext = selectedFile.name.split('.').pop()\r\n      const newFileName = currentUserId+'.'+ext\r\n      const formData = new FormData()\r\n      formData.append(\"file\",selectedFile,newFileName)\r\n      axios.post(`/api/change-profile-pic/${currentUserId}`,{   \r\n        headers: {\r\n            'auth-token': `${userToken}`\r\n        }\r\n    }, formData, {})\r\n      .then(response => dispatch(signInSuccess(response.data)))\r\n      .then(() => setImg(currentUser.profilePic))\r\n      setUpload(false)\r\n    }\r\n  }\r\n  const updateNameAndUsername = () => {\r\n    if(username != currentUser.username && name != currentUser.name){\r\n      fetch('/api/edit-profile', {\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'auth-token': `${userToken}`\r\n\r\n        },\r\n        method:'POST',\r\n        body: JSON.stringify({\r\n          name,username,currentUserId\r\n        })\r\n      }).then(response => response.json())\r\n       .then(data => dispatch(signInSuccess(data)))\r\n    }\r\n  }\r\n  const  handleNameChange = event => {\r\n       setName(event.target.value)\r\n  }\r\n  const  handleUsernameChange = event => {\r\n    setUsername(event.target.value)\r\n  }\r\n   return (\r\n      <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter modalcolor \">\r\n        <Modal.Body  className=\"modalcolor\">\r\n           <div className=\"\" >\r\n             <label for=\"name\" className=\"font-weight-bold\">Name</label>\r\n             <input className=\"border-dark rounded-0 inputstyle\"\r\n              onChange={handleNameChange}\r\n             type=\"text\" value={name} name=\"name\"/>\r\n           </div>\r\n           <div className=\"p-1\">\r\n             <label for=\"username\" className=\"font-weight-bold\">Username</label>\r\n             <input className=\"border-dark rounded-0 inputstyle\"\r\n              onChange={handleUsernameChange}\r\n             type=\"text\" value={username} name=\"username\"/>\r\n           </div>\r\n           <div className=\" align-items-baseline p-1\" style={{display:'flex', flexDirection:\"row\", justifyContent:'space-between'}}>\r\n             <label className=\"font-weight-bold\">Profile picture</label>\r\n            <label className=\"text-nowrap font-weight-bold modal-btn\"  >\r\n                  <i class=\"fas fa-plus\"></i>\r\n                  <input type=\"file\" name=\"filename\" accept=\"image/*\" className=\" d-none\" onChange={previewImage} ref={uploadedFile}/>\r\n            </label>\r\n           </div>\r\n           <img src={currentUser.profilePic}  style={{width:'100%', height:'50%'}}   ref={image}/>\r\n\r\n           <div className=\"p-1\" style={{display:'flex', flexDirection:\"row\", justifyContent:'space-between'}}>\r\n           <div onClick={props.onHide} className=\"modal-btn\">Cancel</div>\r\n          <p  onClick={() =>{\r\n               updatePicture()\r\n               updateNameAndUsername()\r\n               props.history.push(`/profile/${username}`)\r\n               props.onHide()\r\n          }}className=\"modal-btn\" >Save</p>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n  export default EditProfileModal","import React, { useEffect } from 'react'\r\nimport Post from '../components/post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\n\r\nconst RecentPosts = ()  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n        window.scrollTo(0,0)\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Recent Posts</h4>\r\n            {\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\"/>\r\n                ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default RecentPosts","import React, { useEffect } from 'react'\r\nimport Post from '../components/post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\n\r\nconst HotPosts = ()  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{   \r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n        window.scrollTo(0,0)\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Hot Posts</h4>\r\n            {\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\"/>\r\n                ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default HotPosts","import React, { useEffect } from 'react'\r\nimport Post from '../components/post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\n\r\nconst TrendingPosts = ()  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const discussions = useSelector(state => state.posts.allDiscussions)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n        window.scrollTo(0,0)\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            <h4 className=\"text-center\" style={{marginBottom:'20px', fontFamily:'arial'}}>Trending Posts</h4>\r\n            {\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\" />\r\n                ))\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default TrendingPosts","import React, { useEffect, useState } from 'react'\r\nimport Post from '../components/post'\r\nimport { useSelector } from 'react-redux'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst AllPosts = ()  => { \r\n  \r\n    const [discussions, setDiscussions] = useState([])\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{\r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setDiscussions(data.discussions)\r\n        })\r\n        window.scrollTo(0,0)\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div>\r\n            {\r\n                discussions.length>0 ?\r\n                discussions.map(discussion => (       \r\n                        <Post discussion={discussion} width=\"440px\" height=\"360px\" top=\"130px\" />\r\n                ))\r\n                : <div className=\" position-absolute\" style={{marginLeft:'-30px',marginTop:'100px'}}>\r\n                    <Spinner animation=\"border\" variant=\"white\" />\r\n                </div>\r\n            }\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default AllPosts","import React, { useEffect, useState } from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport './who-to-follow.scss'\r\n\r\n\r\nconst WhoToFollow = ()  => { \r\n\r\n    const [RecommendedUsers, setRecommendedUsers] = useState([])\r\n    const userToken = useSelector(state => state.user.userToken)\r\n  \r\n    useEffect(() => {\r\n        fetch(`/api/who-to-follow`,{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setRecommendedUsers(data)\r\n        })\r\n    })\r\n\r\n    return (        \r\n        <div className=\"users\">\r\n        <div className=\"border-bottom pb-2 font-weight-bold\">Who To Follow</div>\r\n         {\r\n             RecommendedUsers.length>0?\r\n             RecommendedUsers.map(user => (\r\n                 <div className=\"user\"> \r\n                    <Link to={`/profile/${user.username}`} className=\"text-decoration-none\">\r\n                        <div className=\"d-flex flex-row align-items-center\">\r\n                            <img src={user.profilePic} className=\"userimg\"/>\r\n                            <div className=\"text-dark\"> {user.username} </div>\r\n                        </div>\r\n                   </Link>\r\n                   <button>Follow</button>\r\n                </div>\r\n             ))\r\n            : <div className=\" position-absolute\" style={{marginLeft:'100px',marginTop:'150px'}}>\r\n                <Spinner animation=\"border\" variant=\"black\" />\r\n              </div>\r\n         }\r\n      </div>\r\n \r\n    )\r\n}\r\n\r\nexport default WhoToFollow","import React, { useEffect } from 'react'\r\nimport RecentPosts from '../components/recent-posts';\r\nimport HotPosts from '../components/hot-posts';\r\nimport TrendingPosts from '../components/trending-posts'\r\nimport AllPosts from '../components/all-posts';\r\nimport WhoToFollow from '../components/who-to-follow';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addAllDiscussions } from '../redux/posts/posts-actions'\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './homepage.scss'\r\n\r\n\r\nconst HomePage = ({match})  => { \r\n  \r\n    const dispatch = useDispatch()\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/discussions',{    \r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addAllDiscussions(data.discussions))\r\n        })\r\n        window.scrollTo(0,0)\r\n    },[])\r\n\r\n\r\n    return (        \r\n        <div className=\"container\" >\r\n            <div className=\"posts\">\r\n            <div className=\"displayedPostsOption\">\r\n               <Link to={'/home/trending-posts'} className=\"option text-decoration-none\"> \r\n                    <i class=\"fas fa-chart-line text-warning\"> \r\n                    </i>\r\n                    <span className=\"text\">Trending</span>\r\n               </Link>\r\n               <Link to={'/home/hot-posts'} className=\"option text-decoration-none\">\r\n                    <i class=\"fab fa-hotjar text-success\">\r\n                    </i>   \r\n                    <span className=\"text\">Hot</span>  \r\n                </Link> \r\n               \r\n                <Link to={'/home/recent-posts'} className=\"option text-decoration-none\">\r\n                    <i class=\"fab fa-hotjar text-info\"></i>  \r\n                    <span className=\"text\">Recent</span>  \r\n                </Link> \r\n                \r\n                <Link to={'/watch'} className=\"option text-decoration-none\">\r\n                    <i class=\"fab fa-youtube text-danger\"></i>\r\n                    <span className=\"text\">Videos</span>  \r\n                </Link> \r\n                <Link to={'/new-post'} className=\"option text-decoration-none\"> \r\n                    <i class=\"fas fa-edit text-primary\">\r\n                    </i>\r\n                    <span className=\"text\">Create</span> \r\n                </Link>\r\n            </div>\r\n            <Switch>\r\n                <Route  path={`${match.path}/trending-posts`} component={TrendingPosts} />\r\n                <Route path={`${match.path}/hot-posts`} component={HotPosts} />\r\n                <Route path={`${match.path}/recent-posts`} component={RecentPosts} />\r\n                <Route path={`${match.path}`} component={AllPosts} />\r\n\r\n            </Switch>\r\n         </div>\r\n         <div className=\"who-to-follow \">\r\n            <WhoToFollow />\r\n         </div>  \r\n\r\n       </div> \r\n \r\n    )\r\n}\r\n\r\nexport default HomePage","import React,{useState, useRef, useEffect, useCallback} from 'react'\r\nimport Media from 'react-bootstrap/Media';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { updateUserProfile, refreshUser, signInSuccess, fetchUserProfile } from '../redux/user/user.actions';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport './profile.scss'\r\nimport CurrentUserPosts from '../components/current-user-posts';\r\nimport RepliedPosts from '../components/replied-posts';\r\nimport LikedPosts from '../components/liked-posts';\r\nimport SharedPosts from '../components/shared-posts';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport EditProfileModal from '../components/edit-profile-modal';\r\nimport HomePage from './homepage';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nconst Profile = ({match, history}) => {\r\n\r\n    const location = useLocation()\r\n    const query = new URLSearchParams(location.search)\r\n    const postId = query.get('post-id')\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    //const userProfile = useSelector(state => state.user.userProfile)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const [userPosts,setUserPosts] = useState([])\r\n    const [userProfile, setUserProfile] = useState({_id:\"\",name:\"\",username:\"\", profilePic:\"\", })\r\n    const dispatch = useDispatch()\r\n    const currentUserId = currentUser._id\r\n    const uploadedFile = useRef(null)\r\n    const image = useRef(null)\r\n    const test = useRef(null)\r\n    const [upload,setUpload] = useState(false)\r\n    const [selectedFile,setSelectedFile] = useState(null)\r\n    const [img,setImg] = useState(currentUser.profilePic)\r\n    console.log(currentUser)\r\n  \r\n    useEffect(() => {\r\n        fetch(`/api/profile/${match.params.username}`,{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n              setUserProfile(data.user)\r\n              setUserPosts(data.userPosts)\r\n        })\r\n\r\n    },[match])\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        setImg(currentUser.profilePic)\r\n    },[currentUser])\r\n     \r\n    const messageUser = () => {\r\n        fetch(`/api/addmate/${userProfile._id}`, {\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'auth-token':`${userToken}`\r\n            },\r\n            body: JSON.stringify({mateId:userProfile._id, userId:currentUser._id})\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n              dispatch(updateUserProfile(data.user))\r\n              history.push(`/chats/${data.Id}`)\r\n           })\r\n    }\r\n \r\n    return (\r\n     <div>\r\n       <div>\r\n           <div className=\"topDiv\">\r\n               \r\n           {\r\n                userProfile ?\r\n                <Media style={{display:'flex',flexDirection:'column',  alignItems:'center', marginTop:'50px'}}  >\r\n                    <div style={{width:'500px', height:'300px', }}>\r\n                            {\r\n                                userProfile.profilePic?\r\n                                <img src={userProfile.profilePic}  style={{width:'100%', height:'100%'}}   ref={image}/>\r\n                                : <div className=\" position-absolute\" style={{marginLeft:'220px',marginTop:'150px'}}>\r\n                                    <Spinner animation=\"border\" variant=\"black\" />\r\n                                </div>\r\n                            }\r\n                    </div>\r\n                    <div className=\"text-center\"\r\n                    onClick={() => setModalShow(true)}\r\n                    >\r\n                        <h1  className=\"font-weight-bold mb-0\">{userProfile.name}</h1>\r\n                        <h6>{userProfile.username}</h6>\r\n                    </div>\r\n                    <EditProfileModal history={history} userProfile={userProfile} show={modalShow} onHide = {() => setModalShow(false)} />\r\n                     <div className=\"profileOptions\">\r\n                        {\r\n                            currentUser._id == userProfile._id?\r\n                                    <p className=\"ml-5\"\r\n                                        onClick={() => setModalShow(true)}\r\n                                    >\r\n                                        Edit profile \r\n\r\n                                    </p>                               \r\n                            :  <p className=\"ml-5\"\r\n                                onClick = {() => messageUser()}\r\n                               > \r\n                                  Message\r\n                                </p>\r\n\r\n                        }\r\n                        <p className=\"ml-5\">30 Followers</p>\r\n                        <p className=\"ml-5\">11 Following</p>\r\n                            \r\n                    </div>   \r\n                    <Media.Body>\r\n                    </Media.Body> \r\n                </Media>\r\n                : <div className=\" position-absolute\" style={{marginLeft:'360px',marginTop:'200px'}}>\r\n                    <Spinner animation=\"border\" variant=\"black\" />\r\n                  </div>\r\n                \r\n             }\r\n                       \r\n           </div>\r\n\r\n        \r\n        <div  className=\"container\" >\r\n            <div  className=\"midDiv\">\r\n                  {\r\n                   userProfile?\r\n                     <div> \r\n                      \r\n                    <div>\r\n                        {\r\n                            currentUser._id == userProfile._id?\r\n                            <div className=\"newPostDiv\">\r\n                                <div style={{display:'flex', flexDirection:'row', alignContent:'center', marginTop:'15px'}}>\r\n                                    <p className=\"\" style={{width:'40px', height:'40px'}}>\r\n                                        <img src={currentUser.profilePic} style={{width:'100%',height:'100%'}} className=\"rounded-circle\" />\r\n                                    </p>\r\n                                    <form  >\r\n                                        <Link to={'/new-post'}>\r\n                                        <input type='text' onChange={() => history.push('/new-post') }  style={{borderRadius:'5px', height:'40px', width:'480px', backgroundColor:'#E1E8ED'}}   className=\" ml-2 pl-2\" placeholder=\"Create a new Post\" />\r\n                                        </Link>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            :null\r\n                        }\r\n                    </div> \r\n                    <div className=\"displayedPostsOptions\">                        \r\n                          <Link to={`/profile/${userProfile.username}` } className=\"option text-decoration-none\"> \r\n                             <i class=\"fas fa-edit mr-1 text-primary\"></i>\r\n                             <span className=\"text\">Posts</span> \r\n                          </Link> \r\n                           <Link to={`/profile/${userProfile.username}/replies`} className=\"option text-decoration-none\"> \r\n                              <i class=\"fas fa-reply-all mr-1 text-info\"></i>\r\n                              <span className=\"text\">Replies</span> \r\n                           </Link> \r\n\r\n                           <Link to={`/profile/${userProfile.username}/likes`} className=\"option text-decoration-none\"> \r\n                              <i class=\"fas fa-heart mr-1 text-danger\"></i>\r\n                              <span className=\"text\">Likes</span>\r\n                            </Link> \r\n                            <Link to={`/profile/${userProfile.username}/shared`} className=\"option text-decoration-none\"> \r\n                              <i class=\"fa fa-share mr-1 text-success\"></i>\r\n                              <span className=\"text\" >Shared</span> \r\n                            </Link> \r\n                    </div>\r\n                      <Switch>\r\n                            <Route path={`${match.path}/shared`} component={SharedPosts} />\r\n                            <Route path={`${match.path}/likes`} component={LikedPosts} />\r\n                            <Route path={`${match.path}/replies`} component={RepliedPosts} />\r\n                            <Route path={`${match.path}`} component={CurrentUserPosts} />\r\n                      </Switch>\r\n                          \r\n                    </div>          \r\n                  :null\r\n                }  \r\n                  </div>  \r\n            </div>\r\n       </div> \r\n\r\n       </div>\r\n    )\r\n}\r\nconst styles = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        height:'100%',\r\n        marginTop:'60px'\r\n    },\r\n    midDiv: {\r\n        width: '45%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n\r\n    },\r\n    displayedPostsOption:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        maxWidth:'550px',\r\n        padding:'10px',\r\n        borderRadius:'5px',\r\n        backgroundColor:'white',\r\n        height: '40px',\r\n        marginBottom:'20px',\r\n        fontFamily:'sans',\r\n        fontSize:'17px'\r\n    },\r\n    newPostDiv:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:'white',\r\n        maxWidth:'550px',\r\n        height: '80px',\r\n        marginBottom:'20px',\r\n        padding:'10px',\r\n        borderRadius:'5px',\r\n        justifyContent:'center'\r\n    }\r\n}\r\n\r\n\r\nexport default Profile","import React, { useState } from 'react'\r\nimport { Media } from 'react-bootstrap'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Reply = ({reply}) => {\r\n\r\n   const [replyBool,setReplyBool] = useState(false)\r\n   \r\n   return (\r\n      <div style={styles.container}>\r\n          <div style={styles.comment}>\r\n            <Media className=\"p-1\">\r\n                <p className=\"\" style={{width:'30px', height:'30px'}}>\r\n                    <Link to={`/profile/${reply.sender.username}`}>\r\n                       <img src={reply.sender.profilePic} className=\"h-100 w-100 rounded-circle\"/>                        \r\n                    </Link>\r\n                </p>\r\n                <Media.Body className=\"ml-2\"  >\r\n                  <div style={styles.body}>\r\n                       <Link to={`/profile/${reply.sender.username}`}>\r\n                          <h6 style={{color:'#EBC944'}} className=\" font-weight-bold \">{reply.sender.name}</h6>\r\n                       </Link>\r\n                        <p style={{fontFamily:'Open Sans Condensed, sans-serif'}} className=\"w-100 text-break\">\r\n                           {ReactHtmlParser(reply.message)}\r\n                        </p>\r\n                  </div>\r\n                  {/* <div style={styles.foot}>\r\n\r\n                     <div\r\n                          style={styles.icon}\r\n                     >\r\n                          <i class=\"far fa-thumbs-up mr-3\"> Like </i> \r\n                     </div>\r\n                     <div \r\n                          style={styles.icon}\r\n                          onClick={() => {\r\n                             setReplyBool(true)\r\n                          }}\r\n                     >\r\n                        <i class=\"fa fa-reply mr-3 d\" > Reply </i>\r\n                     </div>     \r\n                  </div> */}\r\n                </Media.Body>\r\n                \r\n            </Media>            \r\n            <div>\r\n               {/* {\r\n                  replyBool ? \r\n                        <form onSubmit={handleSubmit} style={{display:'flex',flexDirection:'row'}} >\r\n                           <p className=\"\" style={{width:'30px', height:'30px'}}>\r\n                              <img src={props.sender.profilePic} className=\"h-100 w-100 rounded-circle\"/>                        \r\n                           </p>\r\n                           <input value={replyValue} onChange={handleChange} type=\"text\" placeholder=\"Add a reply...\" style={{borderRadius:'10px'}} className=\" ml-3 w-100 pl-2\" />\r\n                        </form>\r\n                     : null\r\n               } */}\r\n            </div> \r\n         </div> \r\n\r\n      </div>\r\n   )\r\n\r\n}\r\nconst  styles = {\r\n   container: {\r\n     marginBottom:'5px',\r\n     width:'100%'\r\n   },\r\n   comment: {\r\n       \r\n   },\r\n   body: {\r\n       backgroundColor:'#E1E8ED',\r\n       borderRadius: '10px',\r\n       padding: '0px 0px 0px 10px'\r\n   },\r\n   foot: {\r\n       display:'flex',\r\n       flexDirection:'row',\r\n       justifycontent:'space-between',       \r\n   },\r\n   icon: {\r\n      cursor:'pointer'\r\n\r\n   },\r\n}\r\n\r\n\r\nexport default Reply","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Media, Alert } from 'react-bootstrap'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { sendingReplyMessageStatus, sendReplyMessage } from '../redux/user/user.actions'\r\nimport Reply from './reply'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Comment = React.forwardRef((props,ref) => {\r\n\r\n   const [reply,setReply] = useState(false)\r\n   const [replyValue,setReplyValue] = useState(props.sender.username)\r\n   const [hideReplies,setHideReplies] = useState(true)\r\n   const currentUser = useSelector(state => state.user.currentUser)\r\n   const userToken = useSelector(state => state.user.userToken)\r\n   const isSendingReply = useSelector(state => state.user.isSendingReply)\r\n   const [replies,setReplies] = useState([])\r\n   const replyInput = useRef(null)\r\n   const dispatch = useDispatch()   \r\n   const handleChange = (event) => {\r\n      setReplyValue(event.target.value)\r\n   }\r\n   useEffect(() => {\r\n      fetch(`/api/comment-replies/${props.message._id}`,{      \r\n         headers: {\r\n             'auth-token': `${userToken}`\r\n         }\r\n     })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n         setReplies(data)\r\n      })\r\n   },[isSendingReply])\r\n   const  handleSubmit = event => {\r\n      event.preventDefault()\r\n      const reply = replyValue\r\n      const messageId = props.message._id\r\n      const senderId = currentUser._id\r\n      if(reply.length > 0){\r\n         dispatch(sendReplyMessage({reply,messageId, senderId}))\r\n         dispatch(sendingReplyMessageStatus())\r\n         setReplyValue('')\r\n      }\r\n   }\r\n   const hideRepliesFunc = () => {\r\n      setHideReplies(false)\r\n   }\r\n   return (\r\n      <div style={styles.container} ref={ref}>\r\n          <div style={styles.comment}>\r\n            <Media className=\"p-1\">\r\n                <p className=\"\" style={{width:'30px', height:'30px'}}>\r\n                     <Link to={`/profile/${props.sender.username}`}>\r\n                        <img src={props.sender.profilePic} style={{width:'100%',height:'100%'}} className=\" ml-1 rounded-circle\"/> \r\n                     </Link>                          \r\n                </p>\r\n                <Media.Body className=\"ml-2\"  >\r\n                  <div style={styles.body}>\r\n                      <Link to={`/profile/${props.sender.username}`}>\r\n                        <h6 style={{color:'black'}} className=\" font-weight-bold m-0 mb-1\">{props.sender.username}</h6>\r\n                      </Link>\r\n                      \r\n                        <p style={{fontFamily:'sans-'}} className=\"w-100 text-break\">\r\n                           {ReactHtmlParser(props.message.message_body)}\r\n                        </p>\r\n                  </div>\r\n                  <div>\r\n                  </div>\r\n                  <div style={styles.foot}>\r\n\r\n                     <div\r\n                          style={styles.icon}\r\n                          onClick={() =>{\r\n                           setReply(true)\r\n                        }}\r\n                     >\r\n                          <i class=\"far fa-thumbs-up mr-3\"> Like </i> \r\n                     </div>\r\n                     <div \r\n                          style={styles.icon}\r\n                          onClick={() =>{\r\n                           setReply(true)\r\n                           setReplyValue('')\r\n                           replyInput.current.focus()\r\n                        }}\r\n                     >\r\n                        <i class=\"fa fa-reply mr-3 d\" > Reply </i>\r\n                     </div> \r\n                     <div \r\n                        style={{cursor:'pointer'}}\r\n                         onClick={() => {\r\n                             hideRepliesFunc()\r\n                         }}\r\n                     >\r\n                        {\r\n                           replies.length > 0?\r\n                              replies.length !== 1?\r\n                                 <p>{replies.length} replies</p>\r\n                              :  <p>{replies.length} reply</p>\r\n                              :null\r\n                        }\r\n                     </div>    \r\n                  </div>\r\n                  <div style={{marginLeft:'100px'}}>\r\n\r\n                     {\r\n                        !hideReplies?\r\n                        replies.map(reply => (\r\n                           <div>\r\n                             <Reply reply = {reply} />\r\n                              <div style={{marginLeft:'50px', flexDirection:'row', display:'flex'}}>\r\n                                 <div\r\n                                    style={styles.icon}\r\n                                 >\r\n                                    <i class=\"far fa-thumbs-up mr-3\"> Like </i> \r\n                                 </div>\r\n                                 <div \r\n                                    style={styles.icon}\r\n                                    onClick={() =>{\r\n                                       setReply(true)\r\n                                       setReplyValue(reply.sender.username)\r\n                                    }}\r\n                                 >\r\n                                    <i class=\"fa fa-reply mr-3 d\" > Reply </i>\r\n                                 </div>     \r\n                              </div>\r\n                             </div>\r\n                        ))\r\n                        :null\r\n                     }\r\n                  </div>\r\n                </Media.Body>\r\n                \r\n            </Media>            \r\n            <div  style={{display:`${reply ? 'block': 'none'}`,marginLeft:'146px'}}  >\r\n               {\r\n                        <form onSubmit={handleSubmit} style={{display:'flex',flexDirection:'row'}} >\r\n                           <p className=\"\" style={{width:'30px', height:'30px'}}>\r\n                              <img src={currentUser.profilePic} className=\"h-100 w-100 rounded-circle\"/>                        \r\n                           </p>\r\n                           <input  value={replyValue} ref={replyInput} onChange={handleChange} type=\"text\" placeholder=\"Add a reply...\" style={{borderRadius:'10px', width:'85%'}} className=\" border ml-2 pl-2\" />\r\n                        </form>\r\n               }\r\n            </div>\r\n         </div> \r\n\r\n      </div>\r\n   )\r\n\r\n})\r\nconst  styles = {\r\n   container: {\r\n     marginBottom:'5px',\r\n     width:'90%'\r\n   },\r\n   comment: {\r\n       \r\n   },\r\n   body: {\r\n       backgroundColor:'#E1E8ED',\r\n       borderRadius: '10px',\r\n       padding: '0px 0px 10px 10px'\r\n   },\r\n   foot: {\r\n       display:'flex',\r\n       flexDirection:'row',\r\n       justifycontent:'space-between', \r\n       marginLeft:'10px',\r\n       marginRight:'10px'      \r\n   },\r\n   icon: {\r\n      cursor:'pointer'\r\n\r\n   },\r\n}\r\n\r\n\r\nexport default Comment","import React, {useState, useEffect, useRef, useCallback} from 'react'\r\nimport Comment from '../components/comment'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport VideoPlayer from '../components/video-player'\r\nimport { sendDiscussionMessage,sendingDiscussionMessageStatus } from '../redux/user/user.actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Media, Spinner } from 'react-bootstrap'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport './discussion.styles.scss'\r\n\r\n\r\nconst Discussion = ({match,currentUser}) => {\r\n\r\n    const location = useLocation()\r\n    const query = new URLSearchParams(location.search)\r\n    const commentId = query.get('comment-id')\r\n\r\n    const [discussion,setDiscussion] = useState({messages:[], _id:'', users:[], topic:'', creator:{}, __v:'', video:'', image:''})\r\n    const currentUserId = currentUser._id\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const discussionId = match.params.discussionId\r\n    const isSendDiscussionMsg = useSelector(state => state.user.isSendDiscussionMsg)\r\n    const isSendingReply = useSelector(state => state.user.isSendingReply)\r\n    const [inputValue,setInputValue] = useState('')\r\n    const dispatch = useDispatch()\r\n    const discussionBox = useRef(null)\r\n    const comment = useRef(null)\r\n    \r\n\r\n    useEffect(() => {\r\n           // discussionBox.current.scrollTop = discussionBox.current.scrollHeight + 100  \r\n            fetch(`/api/discussions/${discussionId}`,{\r\n                headers: {\r\n                    'auth-token': `${userToken}`\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setDiscussion(data.discussion)\r\n            })\r\n\r\n     },[isSendDiscussionMsg, isSendingReply,])\r\n\r\n    useEffect(() => {\r\n        //comment.current.focus()\r\n        window.scrollTo(0,0)\r\n    },[])\r\n    \r\n    const newComment = useCallback(node => {\r\n        if(node !== null){\r\n            window.scrollTo(0,0)\r\n            node.scrollIntoView({ behavior: 'smooth'})\r\n        }\r\n    })\r\n\r\n    const handleSubmit = event => {\r\n            event.preventDefault()\r\n            const message = inputValue\r\n            if(message.length > 0){\r\n                dispatch(sendDiscussionMessage({message,discussionId,currentUserId}))\r\n                dispatch(sendingDiscussionMessageStatus())\r\n                setInputValue('')\r\n\r\n            }        \r\n    }\r\n    const handleChange = event => {\r\n        setInputValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n\r\n             <div style={styles.container}>\r\n                    <div ref={discussionBox} className=\"postDiv\" style={{width:'60%',minHeight:\"600px\", backgroundColor:'white'}}>\r\n                         {\r\n                             discussion.image ?\r\n                             <div>\r\n                               <Media className=\"p-2 mb-3 h-50 w-100\"  style={{}}>\r\n                                <p className=\"bg-dark rounded-circle  mr-1 text-white text-center mr-1\" style={{width:'40px', height:'40px'}}>\r\n                                    <Link to={`/profile/${discussion.creator.username}`}>\r\n                                        <img src={discussion.creator.profilePic} className=\"h-100 w-100 rounded-circle\"/>  \r\n                                    </Link>                      \r\n                                </p>\r\n                                <Media.Body>\r\n                                    <h3>\r\n                                        <Link className=\"font-weight-bold text-dark\" to={`/profile/${discussion.creator.username}`}>\r\n                                            {discussion.creator.username}\r\n                                        </Link>\r\n                                    </h3>\r\n                                    <h4 className=\" text-break\" style={{color:'black', fontFamily:'arial',fontSize:'15px'}}>{ReactHtmlParser(discussion.topic)}</h4>\r\n                                    {\r\n                                        discussion.video.length>0?\r\n                                        <VideoPlayer \r\n                                            src = {discussion.video} \r\n                                            width=\"700px\" height=\"360px\" top=\"130px\"\r\n                                        />\r\n                                        : null\r\n                                    }\r\n                                    {\r\n                                        discussion.image.length>0?\r\n                                        <img src={discussion.image} style={styles.postImage} /> \r\n                                        : null\r\n                                    } \r\n                                    <div style={{display:'flex',justifyContent:'space-between', flexDirection:'row', marginTop:'20px', width:'90%'}}>\r\n                                    </div>\r\n                                    \r\n                                    </Media.Body>\r\n                                </Media>\r\n                    \r\n                                <div style={styles.textarea} className=\"mb-5\">\r\n                                <p className=\"\" style={{width:'30px', height:'30px'}}>\r\n                                    <img src={currentUser.profilePic} style={{width:'100%',height:'100%'}} className=\"ml-2 rounded-circle\" />\r\n                                </p>\r\n                                    <form onSubmit={handleSubmit} style={{width:'92%'}}>\r\n                                    <input type='text' ref={comment} onChange={handleChange} style={{borderRadius:'10px', height:'50px', width:'90%'}} value={inputValue}  className=\" border ml-1 pl-2\" placeholder=\"Add a comment...\" />\r\n                                    </form>\r\n                                </div>\r\n                                {\r\n                                    discussion.messages.map((message) => (\r\n                                        <div>\r\n                                    {\r\n                                            message._id === commentId ?\r\n                                            <Comment message={message} ref={newComment} sender={message.sender}  currentUserId={currentUserId} />\r\n                                            : <Comment message={message}  sender={message.sender}  currentUserId={currentUserId} />\r\n                                    }\r\n                                    </div>\r\n                                    ))\r\n                                } \r\n                            </div>\r\n                           :    <div className=\" position-absolute\" style={{marginLeft:'360px',marginTop:'200px'}}>\r\n                                    <Spinner animation=\"border\" variant=\"black\" />\r\n                                </div>\r\n \r\n                         }\r\n                    </div>     \r\n              </div>\r\n    )\r\n}\r\nconst styles = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginTop:'100px',\r\n        alignItems:'center'\r\n    },\r\n    postImage: {\r\n        height:'380px',\r\n        width: '90%',\r\n    },\r\n    textarea: {\r\n        marginTop:'0px',\r\n        height:'10px',\r\n        marginBotton:'20px',\r\n        width: '97%',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        alignItems:'center'\r\n    },\r\n    submitButton: {\r\n        outline:'none',\r\n        backgroundColor:'orange'\r\n    }\r\n}\r\n\r\n\r\nexport default Discussion","import React, {useCallback, useState} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport axios from 'axios'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport VideoPlayer from './video-player'\r\n\r\nconst VideoDropZone = ({history}) => {\r\n\r\n  const currentUser = useSelector(state => state.user.currentUser)\r\n  const currentUserId = currentUser._id\r\n  const [title,setTitle] = useState('')\r\n  const [videoUrl,setVideoUrl] = useState('')\r\n\r\n  const handleChange = e => {\r\n      setTitle(e.target.value)\r\n  }\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader()\r\n\r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onload = () => {\r\n      // Do whatever you want with the file contents\r\n        const binaryStr = reader.result\r\n        let formData = new FormData()\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append(\"file\", file)\r\n        axios.post('/api/upload-video', formData, config)\r\n        .then(respose => {\r\n            if(respose.data.uploaded){\r\n               setVideoUrl(respose.data.url) \r\n               alert(respose.data.url)\r\n            }else{\r\n                alert('failed to upload video')\r\n                console.log(respose) \r\n            }\r\n        })\r\n      }\r\n      reader.readAsArrayBuffer(file)\r\n    })\r\n    \r\n  }, [])\r\n  const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n\r\n const  handleSubmit = e => {\r\n      e.preventDefault()\r\n      const config = {\r\n          header: {\r\n               'Content-Type': 'application/json',\r\n               'Accept': 'application/json'\r\n            }\r\n      }\r\n      axios.post('/api/upload-video-post',{title:title,videoUrl:videoUrl,currentUserId:currentUserId}, config)\r\n      .then(response => {\r\n          if(response.data.success){\r\n               history.push('/home')\r\n          }else{\r\n              alert('not working')\r\n          }\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n     <form style={{display:'flex', flexDirection:'column', alignItems:'center'}} onSubmit={handleSubmit} >\r\n        <input style={styles.title} value={title} onChange={handleChange} className=\" border-black border\"  name=\"title\"  type=\"search\" maxLength=\"300\" placeholder=\"Title\" />\r\n        <div {...getRootProps()} style={{width:'150px', height:'30px', marginBottom:'5px'}} >\r\n        <input {...getInputProps()} accept=\"video/*\" />\r\n            <p style={{borderRadius:'5px', width:'150px',height:'30px'}}\r\n                  className=\" text-center text-primary border border-primary bg-white\">\r\n                      {`${videoUrl.length>1 ? 'Delete video': 'Upload'}`}\r\n           </p>\r\n        </div>\r\n        <div className=\" border-black border\" style={{height:'250px', width:'750px'}}>\r\n            {\r\n                videoUrl.length>1?\r\n                <VideoPlayer src={videoUrl} width=\"750px\" height=\"250px\" top=\"80px\" />\r\n                // <video controls className=\" w-100 h-100\"> <source  src={videoUrl} /></video>\r\n                :null\r\n            }\r\n\r\n        </div>\r\n        <div style={styles.buttons}>\r\n            <p className=\"pl-4 btn pr-4 m-1 pt-1 pb-1 border-primary font-weight-bold bg-white text-primary\" style={{fontSize:'15px',borderRadius:'5px'}} >Cancel</p>\r\n            <button className=\"pl-4 pr-4 m-1 pt-1 pb-1 bg-primary font-weight-bold text-white\" style={{fontSize:'15px',border:'none',borderRadius:'5px'}} >Post</button>\r\n         </div>\r\n     </form>\r\n  )\r\n}\r\nconst styles = {\r\n    title:{\r\n        alignItems:'center',\r\n        width:'750px',\r\n        margin:'15px',\r\n        borderRadius:'5px',\r\n        padding:'10px'\r\n    },\r\n    \r\n    buttons: {\r\n        display:'flex',\r\n        //justifyContent:'end'\r\n        justifyContent:'flex-end',\r\n        width:'750px'\r\n    }\r\n}\r\nexport default VideoDropZone","import React, { useState, useRef, useEffect } from 'react'\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\r\nimport CKEditor from '@ckeditor/ckeditor5-react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PostUpload = ({history}) => {\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const currentUserId = currentUser._id\r\n    const submit = useRef(null)\r\n\r\n\r\n    const handleSubmit = (editor) => {\r\n        submit.current.addEventListener('submit',  event => {\r\n            event.preventDefault()\r\n            const body = editor.getData()\r\n            editor.setData('')\r\n            fetch('/api/new-discussion', {\r\n              headers:{\r\n                  'Content-Type': 'application/json',\r\n                  'Accept': 'application/json',\r\n                  'auth-token': `${userToken}`\r\n              },\r\n              method:'POST',\r\n              body: JSON.stringify({\r\n                body,currentUserId\r\n              })\r\n             }).then(response => response.json())\r\n              .then(data => {\r\n                    history.push('/home')\r\n              })\r\n        })\r\n   }\r\n  useEffect(() => {\r\n      window.scrollTo(0,0)\r\n  },[])\r\n\r\n  return (\r\n      <div style={styles.container}>\r\n           <form style={styles.postDiv}  ref={submit}>\r\n                                        \r\n               <div className=\"mt-3\">\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    onInit={editor => {\r\n                    handleSubmit( editor )\r\n                    editor.editing.view.change(writer => {\r\n                        writer.setStyle(\r\n                            \"height\",\r\n                            \"250px\",\r\n                            editor.editing.view.document.getRoot()\r\n                        );\r\n                        writer.setStyle(\r\n                            \"width\",\r\n                            \"750px\",\r\n                            editor.editing.view.document.getRoot()\r\n                        );\r\n                        });\r\n                    }}\r\n                    config={ {\r\n                        ckfinder: {\r\n                            uploadUrl:'/api/uploads'\r\n                        },\r\n                        title: {\r\n                            placeholder: 'My custom placeholder for the title'\r\n                        },\r\n                        image: {\r\n                            toolbar: [  'imageStyle:side', '|', 'imageTextAlternative' ],\r\n                            styles: [\r\n                                'alignRight'\r\n                            ],\r\n                            resizeOptions: \r\n                                {\r\n                                    name: 'imageResize:50',\r\n                                    label: '50%',\r\n                                    value: '50'\r\n                                }\r\n                        }\r\n                    } }\r\n                />       \r\n                </div>\r\n                <div style={styles.buttons}>\r\n                    <p className=\"pl-4 btn pr-4 m-1 pt-1 pb-1 border-primary font-weight-bold bg-white text-primary\" style={{fontSize:'15px',borderRadius:'5px'}} >Cancel</p>\r\n                    <button className=\"pl-4 pr-4 m-1 pt-1 pb-1 bg-primary font-weight-bold text-white\" style={{fontSize:'15px',border:'none',borderRadius:'5px'}} >Post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    postDiv:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:'white',\r\n        height:'500px',\r\n        width:'800px',\r\n        alignItems:'center'\r\n    },\r\n    tabs: {\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between'\r\n    },\r\n    tabItem: {\r\n        padding:'10px',\r\n        width:'200px',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n\r\n    },\r\n    title:{\r\n        border:'1px solid black',\r\n        alignItems:'center',\r\n        width:'750px',\r\n        margin:'15px',\r\n        borderRadius:'5px',\r\n        padding:'10px'\r\n    },\r\n    buttons: {\r\n        display:'flex',\r\n        justifyContent:'flex-end',\r\n        width:'750px'\r\n    }\r\n}\r\n\r\nexport default PostUpload","import React, { useState, useRef, useEffect } from 'react'\r\nimport VideoDropZone from '../components/video-dropzone'\r\nimport PostUpload from '../components/post-upload'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst NewPost = ({history}) => {\r\n    const [inputValue,setInputValue] = useState('')\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const currentUserId = currentUser._id\r\n    const submit = useRef(null)\r\n    const [post,setPost] = useState(true)\r\n    const [imageAndVideo,setImageAndVideo] = useState(false)\r\n\r\n\r\n    const handleSubmit = (editor) => {\r\n        submit.current.addEventListener('submit',  event => {\r\n            event.preventDefault()\r\n            const body = editor.getData()\r\n            const title = inputValue\r\n            editor.setData('')\r\n            fetch('/api/new-discussion', {\r\n              headers:{\r\n                  'Content-Type': 'application/json',\r\n                  'Accept': 'application/json',\r\n                  'auth-token': `${userToken}`\r\n\r\n              },\r\n              method:'POST',\r\n              body: JSON.stringify({\r\n                body,currentUserId\r\n              })\r\n             }).then(response => response.json())\r\n              .then(data => {\r\n                    history.push('/home')\r\n              })\r\n        })\r\n   }\r\n  const  handleChange = event => {\r\n     setInputValue(event.target.value)\r\n  }\r\n  useEffect(() => {\r\n      window.scrollTo(0,0)\r\n  },[])\r\n    return (\r\n            <div style={styles.container}>\r\n\r\n               <div style={styles.postDiv}>\r\n                  <div style={styles.tabs}\r\n                  >\r\n                      <div style={styles.tabItem}\r\n                      className={`${post ? 'text-primary':'text-black-50' } border border-black border-left-0 border-top-0`}\r\n\r\n                        \r\n                      onClick={() =>{\r\n                          setPost(true)\r\n                          setImageAndVideo(false)\r\n                      }}>\r\n                         <i class=\"fas fa-edit\"> Post </i>\r\n                      </div>\r\n                      <div style={styles.tabItem}\r\n                          className={`${imageAndVideo ? 'text-primary': 'text-black-50'} border border-black border-left-0 border-top-0`}\r\n                          \r\n                             onClick={() =>{\r\n                                setPost(false)\r\n                                setImageAndVideo(true)\r\n                             }}\r\n                      >\r\n                          <i class=\"fas fa-images\">  Images and Video </i>\r\n                        \r\n                      </div>\r\n                      <div style={styles.tabItem}\r\n                         className=\"text-black-50 border border-black border-left-0 border-top-0\"\r\n                      >\r\n                      <i class=\"fas fa-link\"> Link </i>\r\n                      </div>\r\n                      <div style={styles.tabItem}\r\n                         className=\"  text-black-50 border border-black border-left-0 border-right-0 border-top-0\"\r\n                      >\r\n                        <i class=\"fas fa-images\">  Poll </i>\r\n                      </div>\r\n                  </div>                   \r\n                      {\r\n                          imageAndVideo?\r\n                            <VideoDropZone history={history} />\r\n                          :null\r\n                      }\r\n                                        \r\n                      {\r\n                           post?\r\n                              <PostUpload history={history} />      \r\n                           :null\r\n                      }\r\n                    \r\n               </div>\r\n            </div>\r\n    )\r\n}\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginTop:'100px'\r\n        \r\n    },\r\n    postDiv:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:'white',\r\n        height:'500px',\r\n        width:'800px',\r\n        alignItems:'center',\r\n        backgroundImage: `url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat-back.svg')`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'repeat',\r\n        backgroundSize: '10%'\r\n        \r\n    },\r\n    tabs: {\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        backgroundColor:'white',\r\n        backgroundImage: `url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat-back.svg')`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'repeat',\r\n        backgroundSize: '10%'\r\n    },\r\n    tabItem: {\r\n        padding:'10px',\r\n        width:'200px',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n\r\n    },\r\n    title:{\r\n        border:'1px solid black',\r\n        alignItems:'center',\r\n        width:'750px',\r\n        margin:'15px',\r\n        borderRadius:'5px',\r\n        padding:'10px'\r\n    },\r\n    buttons: {\r\n        display:'flex',\r\n        //justifyContent:'end'\r\n        justifyContent:'flex-end',\r\n        width:'750px'\r\n    }\r\n}\r\n\r\nexport default NewPost","import React, { useEffect } from 'react'\r\nimport Post from '../components/post'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addWatchVideos } from '../redux/posts/posts-actions'\r\n\r\nconst WatchVideos = ()  => { \r\n  \r\n    const watchVideos = useSelector(state => state.posts.watchVideos)\r\n    const userToken = useSelector(state => state.user.userToken)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        fetch('/api/watch-videos',{\r\n            headers: {\r\n                'auth-token': `${userToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(addWatchVideos(data))\r\n        })\r\n    },[])\r\n\r\n    return (        \r\n        <div style={styles.container} >\r\n            <div style={styles.posts}>\r\n            <h5 style={{marginBottom:'10px', fontFamily:'arial'}}>Top videos for you</h5>\r\n            {\r\n                watchVideos.map(video => (       \r\n                         <Post discussion={video} height=\"500px\" width=\"840px\" top=\"200px\"  />\r\n                ))\r\n            }\r\n            </div>\r\n       </div> \r\n \r\n    )\r\n}\r\nconst styles = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        height:'100%',\r\n        marginTop:'70px'\r\n    },\r\n    posts: {\r\n        width:'70%'\r\n    }\r\n}\r\n\r\n\r\nexport default WatchVideos","import React, {useState, useEffect} from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport Media from 'react-bootstrap/Media';\r\nimport { Link } from 'react-router-dom';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Search = () => {\r\n\r\n    const location = useLocation()\r\n    const query = new URLSearchParams(location.search)\r\n    const username = query.get('q')\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const userToken = useSelector(state => state.user.userToken)\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/search/users/${username}`,{\r\n            headers:{\r\n                'auth-token':`${userToken}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setSearchResults(data)\r\n        })\r\n    },[username])\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n\r\n    return (\r\n            <div style={styles.container}>\r\n               {\r\n                   searchResults.length > 0?\r\n                      searchResults.map(result => (\r\n                        <div style={styles.result}> \r\n                            <Link to={`/profile/${result.username}`} className=\"text-decoration-none text\">\r\n                                <Media className=\"\" >\r\n                                    <p className=\"rounded-circle  mr-3\" style={{width:'60px', height:'60px'}}>\r\n                                        <img src={result.profilePic} className=\"h-100 w-100 rounded-circle\"/>                        \r\n                                    </p>\r\n                                    <Media.Body>\r\n                                        <h5 className=\"  font-weight-normal text-break\" style={{color:'black', fontSize:'15px', marginTop:'10px'}}>{result.name}</h5>\r\n                                    </Media.Body>\r\n                                </Media>\r\n                            </Link>\r\n                        </div>\r\n                      ))\r\n                   :<div className=\" position-absolute\" style={{marginLeft:'0px',marginTop:'200px'}}>\r\n                        <Spinner animation=\"border\" variant=\"white\" />\r\n                    </div>\r\n               }\r\n            </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        marginTop:'100px',\r\n        alignItems:'center'\r\n    },\r\n    result:{\r\n        minHeight: '80px',\r\n        backgroundColor:'white',\r\n        marginBottom:'10px',\r\n        maxWidth:'550px',\r\n        minWidth:'550px',\r\n        padding:'10px'\r\n    }\r\n}\r\n\r\nexport default Search","import React, {useEffect,useState} from 'react';\nimport Header from './components/header.component';\nimport WelcomePage from './pages/welcomepage/welcomepage.component';\nimport SignIn from './pages/signin.component';\nimport SignUp from './pages/signup.component';\nimport ChatsPage from './pages/chats-page';\nimport Notifications from './pages/notifications';\nimport Profile from './pages/profile';\nimport HomePage from './pages/homepage';\nimport Discussion from './pages/discussion';\nimport ScrollToTop from './components/scroll-to-top';\nimport Footer from './components/footer.component';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport { addAllDiscussions, addDiscussionsUsers, addDiscussionsCreators } from './redux/posts/posts-actions'\nimport NewPost from './pages/new-post';\nimport Trending from './pages/watch-videos';\nimport Search from './pages/search';\nimport WatchVideos from './pages/watch-videos';\nimport './App.scss'\n\n\nconst App = () => {\n\n  const  currentUser = useSelector(state => state.user.currentUser)\n  const temp = useSelector(state => state.posts.discussions)\n  const dispatch =  useDispatch()\n  return (\n    <div style={{display:'flex',  flexDirection:'column', justifyContent:'space-bet'}}>\n      <Header/>\n        <div className=\"mainBody\">\n          <Switch>\n            <Route exact path={'/'} render={() => currentUser ? (<Redirect to='/home' />) : ( <WelcomePage/>)}/>\n            <Route exact path={'/signin'} render={() => currentUser ? (<Redirect to='/home' />) : ( <SignIn/>)} />\n            <Route exact path={'/signup'} render={() => currentUser ? (<Redirect to='/home' />) : ( <SignUp/>)}/>\n            \n            {\n              currentUser ?\n                <Switch>\n                  <Route path={'/home'} render = {(props) => <HomePage {...props} />} />\n                  <Route path={'/discussions/:discussionId'} render = {(props) => <Discussion currentUser={currentUser} {...props}/>} />\n                  <Route path={'/chats'} component={ChatsPage} />\n                  <Route path={'/notifications'} component={Notifications} />\n                  <Route path={'/profile/:username'} component={Profile} />\n                  <Route path={'/new-post'} component={NewPost} />\n                  <Route path={'/watch'} component={WatchVideos} />\n                  <Route path={'/search'} component={Search} />\n\n                </Switch>\n                : <Redirect to='/signin' />\n            }\n          </Switch>\n      </div>\n     </div>\n     \n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import io from 'socket.io-client';\r\n\r\nconst ENDPOINT = '/'\r\nlet socket =   io(ENDPOINT)\r\n\r\nexport const sendMsg = (Messages,object) => {\r\n    const {message,chatId,mateId,currentUserId} = object;\r\n    socket.emit('message', {message,chatId,mateId,currentUserId})\r\n}\r\n\r\nexport const sendDiscussionMsg = (Messages, object) => {\r\n    const {message, discussionId, currentUserId} = object\r\n    socket.emit('discussion-message', {message,discussionId,currentUserId})\r\n}\r\n\r\nexport const sendReply = (replyObject) => {\r\n    const {reply,messageId, senderId} = replyObject\r\n    socket.emit('reply', {reply,messageId, senderId})\r\n}\r\n\r\n","import UserActionTypes from './user.types';\r\nimport {sendMsg, sendDiscussionMsg,sendReply, refreshCurrentUser} from './user.utils';\r\nimport io from 'socket.io-client';\r\nimport { stat } from 'fs';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n    userToken: '',\r\n    Messages: null,\r\n    error: null,\r\n    isFetchingMates: false,\r\n    searchResultMates: null,\r\n    mates: null,\r\n    isSending: true,\r\n    isSendDiscussionMsg: true,\r\n    isSendingReply:true,\r\n    likingPost:false,\r\n    Replies: [],\r\n    userProfile:null,\r\n    userHeaderOptionsDisplay:false\r\n}\r\n\r\nconst userReducer  = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case UserActionTypes.SIGN_IN_TOKEN:\r\n            return {\r\n                ...state,\r\n                userToken: action.payload\r\n            }\r\n        case UserActionTypes.SIGN_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                error: null\r\n            }\r\n        case UserActionTypes.SIGN_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: null,\r\n                userToken: '',\r\n                error: null\r\n            }\r\n        case UserActionTypes.UPDATE_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        case UserActionTypes.SEND_DISCUSSION_MESSAGE:\r\n            return {\r\n                ...state,\r\n                Messages: sendDiscussionMsg(state.Messages, action.payload)\r\n            }\r\n        case UserActionTypes.SEND_MESSAGE_START:\r\n            return {\r\n                ...state,\r\n                Messages: sendMsg(state.Messages,action.payload)\r\n            }\r\n        case UserActionTypes.SENDING_MESSAGE_STATUS:\r\n            return {\r\n                ...state,\r\n                isSending: !state.isSending\r\n            }\r\n        case UserActionTypes.SENDING_DISCUSSION_MESSAGE_STATUS:\r\n            return {\r\n                ...state,\r\n                isSendDiscussionMsg: !state.isSendDiscussionMsg\r\n            }\r\n        case UserActionTypes.SEND_REPLY:\r\n            return {\r\n                ...state,\r\n                Replies: sendReply(action.payload)\r\n            }\r\n        case UserActionTypes.SENDING_REPLY_STATUS:\r\n            return {\r\n                ...state,\r\n                isSendingReply: !state.isSendingReply\r\n            }\r\n        case UserActionTypes.LIKING_POST:\r\n            return {\r\n                ...state,\r\n                likingPost: !state.likingPost\r\n            }\r\n        case UserActionTypes.FETCH_MATES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                searchResultMates: action.payload,\r\n                isFetchingMates: false\r\n            }\r\n        case UserActionTypes.FETCH_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: action.payload\r\n            }\r\n        case UserActionTypes.TOGGLE_USER_HEADER_OPTIONS_DISPLAY:\r\n            return {\r\n                ...state,\r\n                userHeaderOptionsDisplay: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}\r\nexport default userReducer;","const INITIAL_STATE = {\r\n   allDiscussions:[],\r\n   watchVideos:[]\r\n}   \r\n\r\nconst postsReducer = (state = INITIAL_STATE, action) => {\r\n\r\n    switch(action.type){\r\n        case 'ADD_ALL_DISCUSSIONS':\r\n            return {\r\n                ...state,\r\n                allDiscussions: action.payload\r\n            }\r\n        case 'ADD_WATCH_VIDEOS':\r\n            return {\r\n                ...state,\r\n                watchVideos: action.payload\r\n            }\r\n        default :\r\n          return state\r\n    }\r\n}\r\nexport default postsReducer","import {combineReducers} from 'redux';\r\nimport userReducer from './user/user.reducer';\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport postsReducer from './posts/posts-reducers';\r\n\r\nconst persistConfig = {\r\n    key:'root',\r\n    storage,\r\n    whitelist: ['user']\r\n}\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    posts: postsReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig,rootReducer);\r\n\r\n\r\n\r\n\r\n\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\n\r\n\r\n\r\nconst middlewares = [];\r\n\r\nmiddlewares.push(logger);\r\n\r\nexport  const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default {store,persistor};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nReactDOM.render(\n<Provider store={store}>\n   <PersistGate persistor={persistor}>\n      <BrowserRouter >\n        <App />\n      </BrowserRouter>\n   </PersistGate>\n</Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}